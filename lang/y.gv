// Generated by GNU Bison 3.8.2.
// Report bugs to <bug-bison@gnu.org>.
// Home page: <https://www.gnu.org/software/bison/>.

digraph "parser.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="State 0\n\l  0 $accept: • program $end\l"]
  0 -> 1 [style=solid label="TYPE"]
  0 -> 2 [style=solid label="CONSTANT"]
  0 -> 3 [style=dashed label="program"]
  0 -> 4 [style=dashed label="declarations_section"]
  0 -> 5 [style=dashed label="declarations_list"]
  0 -> 6 [style=dashed label="declaration"]
  0 -> "0R2" [style=solid]
 "0R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  1 [label="State 1\n\l  6 declaration: TYPE • id_list\l"]
  1 -> 7 [style=solid label="ID"]
  1 -> 8 [style=dashed label="id_list"]
  1 -> 9 [style=dashed label="id_declaration"]
  1 -> 10 [style=dashed label="id"]
  2 [label="State 2\n\l  7 declaration: CONSTANT • TYPE id_list\l"]
  2 -> 11 [style=solid label="TYPE"]
  3 [label="State 3\n\l  0 $accept: program • $end\l"]
  3 -> 12 [style=solid label="$end"]
  4 [label="State 4\n\l  1 program: declarations_section • subprograms_section\l"]
  4 -> 13 [style=solid label="FUNCTION"]
  4 -> 14 [style=dashed label="subprograms_section"]
  4 -> 15 [style=dashed label="subprogram"]
  4 -> 16 [style=dashed label="header"]
  5 [label="State 5\n\l  3 declarations_section: declarations_list •\l"]
  5 -> "5R3" [style=solid]
 "5R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  6 [label="State 6\n\l  4 declarations_list: declaration • ';'\l  5                  | declaration • ';' declarations_list\l"]
  6 -> 17 [style=solid label="';'"]
  7 [label="State 7\n\l 12 id: ID • dimensions\l"]
  7 -> 18 [style=solid label="'['"]
  7 -> 19 [style=dashed label="dimensions"]
  7 -> 20 [style=dashed label="dimensions_novalue"]
  7 -> 21 [style=dashed label="dimensions_value"]
  7 -> "7R13" [style=solid]
 "7R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  8 [label="State 8\n\l  6 declaration: TYPE id_list •\l"]
  8 -> "8R6" [style=solid]
 "8R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  9 [label="State 9\n\l  8 id_list: id_declaration •\l  9        | id_declaration • ',' id_list\l"]
  9 -> 22 [style=solid label="','"]
  9 -> "9R8" [style=solid]
 "9R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  10 [label="State 10\n\l 10 id_declaration: id •\l 11               | id • '=' expression\l"]
  10 -> 23 [style=solid label="'='"]
  10 -> "10R10" [style=solid]
 "10R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  11 [label="State 11\n\l  7 declaration: CONSTANT TYPE • id_list\l"]
  11 -> 7 [style=solid label="ID"]
  11 -> 24 [style=dashed label="id_list"]
  11 -> 9 [style=dashed label="id_declaration"]
  11 -> 10 [style=dashed label="id"]
  12 [label="State 12\n\l  0 $accept: program $end •\l"]
  12 -> "12R0" [style=solid]
 "12R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  13 [label="State 13\n\l 55 header: FUNCTION • signature\l"]
  13 -> 25 [style=solid label="VOID"]
  13 -> 26 [style=solid label="TYPE"]
  13 -> 27 [style=dashed label="signature"]
  13 -> 28 [style=dashed label="subprogram_type"]
  14 [label="State 14\n\l  1 program: declarations_section subprograms_section •\l"]
  14 -> "14R1" [style=solid]
 "14R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  15 [label="State 15\n\l 52 subprograms_section: subprogram •\l 53                    | subprogram • subprograms_section\l"]
  15 -> 13 [style=solid label="FUNCTION"]
  15 -> 29 [style=dashed label="subprograms_section"]
  15 -> 15 [style=dashed label="subprogram"]
  15 -> 16 [style=dashed label="header"]
  15 -> "15R52" [style=solid]
 "15R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  16 [label="State 16\n\l 54 subprogram: header • block\l"]
  16 -> 30 [style=solid label="'{'"]
  16 -> 31 [style=dashed label="block"]
  17 [label="State 17\n\l  4 declarations_list: declaration ';' •\l  5                  | declaration ';' • declarations_list\l"]
  17 -> 1 [style=solid label="TYPE"]
  17 -> 2 [style=solid label="CONSTANT"]
  17 -> 32 [style=dashed label="declarations_list"]
  17 -> 6 [style=dashed label="declaration"]
  17 -> "17R4" [style=solid]
 "17R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  18 [label="State 18\n\l 16 dimensions_novalue: '[' • ']'\l 17                   | '[' • ']' dimensions_novalue\l 18 dimensions_value: '[' • INT ']'\l 19                 | '[' • INT ']' dimensions_value\l"]
  18 -> 33 [style=solid label="INT"]
  18 -> 34 [style=solid label="']'"]
  19 [label="State 19\n\l 12 id: ID dimensions •\l"]
  19 -> "19R12" [style=solid]
 "19R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  20 [label="State 20\n\l 14 dimensions: dimensions_novalue •\l"]
  20 -> "20R14" [style=solid]
 "20R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  21 [label="State 21\n\l 15 dimensions: dimensions_value •\l"]
  21 -> "21R15" [style=solid]
 "21R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  22 [label="State 22\n\l  9 id_list: id_declaration ',' • id_list\l"]
  22 -> 7 [style=solid label="ID"]
  22 -> 35 [style=dashed label="id_list"]
  22 -> 9 [style=dashed label="id_declaration"]
  22 -> 10 [style=dashed label="id"]
  23 [label="State 23\n\l 11 id_declaration: id '=' • expression\l"]
  23 -> 36 [style=solid label="ID"]
  23 -> 37 [style=solid label="INT"]
  23 -> 38 [style=solid label="REAL"]
  23 -> 39 [style=solid label="BOOLEAN"]
  23 -> 40 [style=solid label="CHAR"]
  23 -> 41 [style=solid label="STRING"]
  23 -> 42 [style=solid label="'('"]
  23 -> 43 [style=dashed label="id"]
  23 -> 44 [style=dashed label="expression"]
  23 -> 45 [style=dashed label="term"]
  23 -> 46 [style=dashed label="factor"]
  23 -> 47 [style=dashed label="base"]
  23 -> 48 [style=dashed label="literal"]
  23 -> 49 [style=dashed label="id_value"]
  23 -> 50 [style=dashed label="function_call"]
  24 [label="State 24\n\l  7 declaration: CONSTANT TYPE id_list •\l"]
  24 -> "24R7" [style=solid]
 "24R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  25 [label="State 25\n\l 58 subprogram_type: VOID •\l"]
  25 -> "25R58" [style=solid]
 "25R58" [label="R58", fillcolor=3, shape=diamond, style=filled]
  26 [label="State 26\n\l 57 subprogram_type: TYPE •\l"]
  26 -> "26R57" [style=solid]
 "26R57" [label="R57", fillcolor=3, shape=diamond, style=filled]
  27 [label="State 27\n\l 55 header: FUNCTION signature •\l"]
  27 -> "27R55" [style=solid]
 "27R55" [label="R55", fillcolor=3, shape=diamond, style=filled]
  28 [label="State 28\n\l 56 signature: subprogram_type • subprogram_id '(' parameters ')'\l"]
  28 -> 51 [style=solid label="ID"]
  28 -> 52 [style=solid label="MAIN"]
  28 -> 53 [style=dashed label="subprogram_id"]
  29 [label="State 29\n\l 53 subprograms_section: subprogram subprograms_section •\l"]
  29 -> "29R53" [style=solid]
 "29R53" [label="R53", fillcolor=3, shape=diamond, style=filled]
  30 [label="State 30\n\l 66 block: '{' • body '}'\l"]
  30 -> 7 [style=solid label="ID"]
  30 -> 1 [style=solid label="TYPE"]
  30 -> 2 [style=solid label="CONSTANT"]
  30 -> 54 [style=solid label="FOR"]
  30 -> 55 [style=solid label="WHILE"]
  30 -> 56 [style=solid label="IF"]
  30 -> 57 [style=solid label="SWITCH"]
  30 -> 58 [style=solid label="BREAK"]
  30 -> 59 [style=solid label="RETURN"]
  30 -> 60 [style=dashed label="declarations_list"]
  30 -> 6 [style=dashed label="declaration"]
  30 -> 61 [style=dashed label="id"]
  30 -> 62 [style=dashed label="body"]
  30 -> 63 [style=dashed label="statement_list"]
  30 -> 64 [style=dashed label="statement"]
  30 -> 65 [style=dashed label="assignment"]
  30 -> 66 [style=dashed label="conditional"]
  30 -> 67 [style=dashed label="if_else"]
  30 -> 68 [style=dashed label="if"]
  30 -> 69 [style=dashed label="switch_case"]
  30 -> 70 [style=dashed label="switch"]
  30 -> 71 [style=dashed label="loop"]
  30 -> 72 [style=dashed label="while"]
  30 -> 73 [style=dashed label="for"]
  30 -> 74 [style=dashed label="return"]
  30 -> "30R67" [style=solid]
 "30R67" [label="R67", fillcolor=3, shape=diamond, style=filled]
  31 [label="State 31\n\l 54 subprogram: header block •\l"]
  31 -> "31R54" [style=solid]
 "31R54" [label="R54", fillcolor=3, shape=diamond, style=filled]
  32 [label="State 32\n\l  5 declarations_list: declaration ';' declarations_list •\l"]
  32 -> "32R5" [style=solid]
 "32R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  33 [label="State 33\n\l 18 dimensions_value: '[' INT • ']'\l 19                 | '[' INT • ']' dimensions_value\l"]
  33 -> 75 [style=solid label="']'"]
  34 [label="State 34\n\l 16 dimensions_novalue: '[' ']' •\l 17                   | '[' ']' • dimensions_novalue\l"]
  34 -> 76 [style=solid label="'['"]
  34 -> 77 [style=dashed label="dimensions_novalue"]
  34 -> "34R16" [style=solid]
 "34R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  35 [label="State 35\n\l  9 id_list: id_declaration ',' id_list •\l"]
  35 -> "35R9" [style=solid]
 "35R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  36 [label="State 36\n\l 12 id: ID • dimensions\l 42 function_call: ID • '(' arguments ')'\l"]
  36 -> 18 [style=solid label="'['"]
  36 -> 78 [style=solid label="'('"]
  36 -> 19 [style=dashed label="dimensions"]
  36 -> 20 [style=dashed label="dimensions_novalue"]
  36 -> 21 [style=dashed label="dimensions_value"]
  36 -> "36R13" [style=solid]
 "36R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  37 [label="State 37\n\l 35 literal: INT •\l"]
  37 -> "37R35" [style=solid]
 "37R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
  38 [label="State 38\n\l 36 literal: REAL •\l"]
  38 -> "38R36" [style=solid]
 "38R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  39 [label="State 39\n\l 37 literal: BOOLEAN •\l"]
  39 -> "39R37" [style=solid]
 "39R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  40 [label="State 40\n\l 38 literal: CHAR •\l"]
  40 -> "40R38" [style=solid]
 "40R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  41 [label="State 41\n\l 39 literal: STRING •\l"]
  41 -> "41R39" [style=solid]
 "41R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  42 [label="State 42\n\l 31 base: '(' • expression ')'\l"]
  42 -> 36 [style=solid label="ID"]
  42 -> 37 [style=solid label="INT"]
  42 -> 38 [style=solid label="REAL"]
  42 -> 39 [style=solid label="BOOLEAN"]
  42 -> 40 [style=solid label="CHAR"]
  42 -> 41 [style=solid label="STRING"]
  42 -> 42 [style=solid label="'('"]
  42 -> 43 [style=dashed label="id"]
  42 -> 79 [style=dashed label="expression"]
  42 -> 45 [style=dashed label="term"]
  42 -> 46 [style=dashed label="factor"]
  42 -> 47 [style=dashed label="base"]
  42 -> 48 [style=dashed label="literal"]
  42 -> 49 [style=dashed label="id_value"]
  42 -> 50 [style=dashed label="function_call"]
  43 [label="State 43\n\l 40 id_value: id •\l"]
  43 -> "43R40" [style=solid]
 "43R40" [label="R40", fillcolor=3, shape=diamond, style=filled]
  44 [label="State 44\n\l 11 id_declaration: id '=' expression •\l 20 expression: expression • expression_operator term\l"]
  44 -> 80 [style=solid label="'+'"]
  44 -> 81 [style=solid label="'-'"]
  44 -> 82 [style=dashed label="expression_operator"]
  44 -> "44R11" [style=solid]
 "44R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  45 [label="State 45\n\l 21 expression: term •\l 24 term: term • term_operator factor\l"]
  45 -> 83 [style=solid label="'*'"]
  45 -> 84 [style=solid label="'/'"]
  45 -> 85 [style=solid label="'%'"]
  45 -> 86 [style=dashed label="term_operator"]
  45 -> "45R21" [style=solid]
 "45R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  46 [label="State 46\n\l 25 term: factor •\l"]
  46 -> "46R25" [style=solid]
 "46R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  47 [label="State 47\n\l 29 factor: base • POWER factor\l 30       | base •\l"]
  47 -> 87 [style=solid label="POWER"]
  47 -> "47R30" [style=solid]
 "47R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  48 [label="State 48\n\l 32 base: literal •\l"]
  48 -> "48R32" [style=solid]
 "48R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  49 [label="State 49\n\l 33 base: id_value •\l 34     | id_value • double_sign\l"]
  49 -> 88 [style=solid label="DOUBLE_PLUS"]
  49 -> 89 [style=solid label="DOUBLE_MINUS"]
  49 -> 90 [style=dashed label="double_sign"]
  49 -> "49R33" [style=solid]
 "49R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
  50 [label="State 50\n\l 41 id_value: function_call •\l"]
  50 -> "50R41" [style=solid]
 "50R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  51 [label="State 51\n\l 59 subprogram_id: ID •\l"]
  51 -> "51R59" [style=solid]
 "51R59" [label="R59", fillcolor=3, shape=diamond, style=filled]
  52 [label="State 52\n\l 60 subprogram_id: MAIN •\l"]
  52 -> "52R60" [style=solid]
 "52R60" [label="R60", fillcolor=3, shape=diamond, style=filled]
  53 [label="State 53\n\l 56 signature: subprogram_type subprogram_id • '(' parameters ')'\l"]
  53 -> 91 [style=solid label="'('"]
  54 [label="State 54\n\l122 for: FOR • for_structure block\l"]
  54 -> 92 [style=solid label="'('"]
  54 -> 93 [style=dashed label="for_structure"]
  55 [label="State 55\n\l121 while: WHILE • evaluation block\l"]
  55 -> 7 [style=solid label="ID"]
  55 -> 94 [style=solid label="'('"]
  55 -> 95 [style=solid label="'!'"]
  55 -> 96 [style=dashed label="id"]
  55 -> 97 [style=dashed label="evaluation"]
  55 -> 98 [style=dashed label="comparation"]
  55 -> 99 [style=dashed label="comparison"]
  55 -> 100 [style=dashed label="compare"]
  56 [label="State 56\n\l105 if: IF • '(' evaluation ')' block\l"]
  56 -> 101 [style=solid label="'('"]
  57 [label="State 57\n\l112 switch: SWITCH • '(' id_value ')'\l"]
  57 -> 102 [style=solid label="'('"]
  58 [label="State 58\n\l 77 statement: BREAK •\l"]
  58 -> "58R77" [style=solid]
 "58R77" [label="R77", fillcolor=3, shape=diamond, style=filled]
  59 [label="State 59\n\l127 return: RETURN • expression\l"]
  59 -> 36 [style=solid label="ID"]
  59 -> 37 [style=solid label="INT"]
  59 -> 38 [style=solid label="REAL"]
  59 -> 39 [style=solid label="BOOLEAN"]
  59 -> 40 [style=solid label="CHAR"]
  59 -> 41 [style=solid label="STRING"]
  59 -> 42 [style=solid label="'('"]
  59 -> 43 [style=dashed label="id"]
  59 -> 103 [style=dashed label="expression"]
  59 -> 45 [style=dashed label="term"]
  59 -> 46 [style=dashed label="factor"]
  59 -> 47 [style=dashed label="base"]
  59 -> 48 [style=dashed label="literal"]
  59 -> 49 [style=dashed label="id_value"]
  59 -> 50 [style=dashed label="function_call"]
  60 [label="State 60\n\l 68 body: declarations_list •\l 69     | declarations_list • statement_list\l"]
  60 -> 7 [style=solid label="ID"]
  60 -> 54 [style=solid label="FOR"]
  60 -> 55 [style=solid label="WHILE"]
  60 -> 56 [style=solid label="IF"]
  60 -> 57 [style=solid label="SWITCH"]
  60 -> 58 [style=solid label="BREAK"]
  60 -> 59 [style=solid label="RETURN"]
  60 -> 61 [style=dashed label="id"]
  60 -> 104 [style=dashed label="statement_list"]
  60 -> 64 [style=dashed label="statement"]
  60 -> 65 [style=dashed label="assignment"]
  60 -> 66 [style=dashed label="conditional"]
  60 -> 67 [style=dashed label="if_else"]
  60 -> 68 [style=dashed label="if"]
  60 -> 69 [style=dashed label="switch_case"]
  60 -> 70 [style=dashed label="switch"]
  60 -> 71 [style=dashed label="loop"]
  60 -> 72 [style=dashed label="while"]
  60 -> 73 [style=dashed label="for"]
  60 -> 74 [style=dashed label="return"]
  60 -> "60R68" [style=solid]
 "60R68" [label="R68", fillcolor=3, shape=diamond, style=filled]
  61 [label="State 61\n\l 78 assignment: id • assignment_operation\l"]
  61 -> 105 [style=solid label="PLUS_ASSIGN"]
  61 -> 106 [style=solid label="MINUS_ASSIGN"]
  61 -> 107 [style=solid label="DIV_ASSIGN"]
  61 -> 108 [style=solid label="TIMES_ASSIGN"]
  61 -> 88 [style=solid label="DOUBLE_PLUS"]
  61 -> 89 [style=solid label="DOUBLE_MINUS"]
  61 -> 109 [style=solid label="'='"]
  61 -> 110 [style=dashed label="double_sign"]
  61 -> 111 [style=dashed label="assignment_operation"]
  61 -> 112 [style=dashed label="assignment_sign"]
  62 [label="State 62\n\l 66 block: '{' body • '}'\l"]
  62 -> 113 [style=solid label="'}'"]
  63 [label="State 63\n\l 70 body: statement_list •\l"]
  63 -> "63R70" [style=solid]
 "63R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
  64 [label="State 64\n\l 71 statement_list: statement • ';'\l 72               | statement • ';' statement_list\l"]
  64 -> 114 [style=solid label="';'"]
  65 [label="State 65\n\l 73 statement: assignment •\l"]
  65 -> "65R73" [style=solid]
 "65R73" [label="R73", fillcolor=3, shape=diamond, style=filled]
  66 [label="State 66\n\l 74 statement: conditional •\l"]
  66 -> "66R74" [style=solid]
 "66R74" [label="R74", fillcolor=3, shape=diamond, style=filled]
  67 [label="State 67\n\l102 conditional: if_else •\l"]
  67 -> "67R102" [style=solid]
 "67R102" [label="R102", fillcolor=3, shape=diamond, style=filled]
  68 [label="State 68\n\l104 if_else: if • else_section\l"]
  68 -> 115 [style=solid label="ELSE_IF"]
  68 -> 116 [style=solid label="ELSE"]
  68 -> 117 [style=dashed label="else_section"]
  68 -> 118 [style=dashed label="else_if"]
  68 -> 119 [style=dashed label="else"]
  68 -> "68R106" [style=solid]
 "68R106" [label="R106", fillcolor=3, shape=diamond, style=filled]
  69 [label="State 69\n\l103 conditional: switch_case •\l"]
  69 -> "69R103" [style=solid]
 "69R103" [label="R103", fillcolor=3, shape=diamond, style=filled]
  70 [label="State 70\n\l111 switch_case: switch • '{' case_section default_section '}'\l"]
  70 -> 120 [style=solid label="'{'"]
  71 [label="State 71\n\l 75 statement: loop •\l"]
  71 -> "71R75" [style=solid]
 "71R75" [label="R75", fillcolor=3, shape=diamond, style=filled]
  72 [label="State 72\n\l119 loop: while •\l"]
  72 -> "72R119" [style=solid]
 "72R119" [label="R119", fillcolor=3, shape=diamond, style=filled]
  73 [label="State 73\n\l120 loop: for •\l"]
  73 -> "73R120" [style=solid]
 "73R120" [label="R120", fillcolor=3, shape=diamond, style=filled]
  74 [label="State 74\n\l 76 statement: return •\l"]
  74 -> "74R76" [style=solid]
 "74R76" [label="R76", fillcolor=3, shape=diamond, style=filled]
  75 [label="State 75\n\l 18 dimensions_value: '[' INT ']' •\l 19                 | '[' INT ']' • dimensions_value\l"]
  75 -> 121 [style=solid label="'['"]
  75 -> 122 [style=dashed label="dimensions_value"]
  75 -> "75R18" [style=solid]
 "75R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  76 [label="State 76\n\l 16 dimensions_novalue: '[' • ']'\l 17                   | '[' • ']' dimensions_novalue\l"]
  76 -> 34 [style=solid label="']'"]
  77 [label="State 77\n\l 17 dimensions_novalue: '[' ']' dimensions_novalue •\l"]
  77 -> "77R17" [style=solid]
 "77R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  78 [label="State 78\n\l 42 function_call: ID '(' • arguments ')'\l"]
  78 -> 36 [style=solid label="ID"]
  78 -> 37 [style=solid label="INT"]
  78 -> 38 [style=solid label="REAL"]
  78 -> 39 [style=solid label="BOOLEAN"]
  78 -> 40 [style=solid label="CHAR"]
  78 -> 41 [style=solid label="STRING"]
  78 -> 123 [style=dashed label="id_declaration"]
  78 -> 10 [style=dashed label="id"]
  78 -> 124 [style=dashed label="literal"]
  78 -> 125 [style=dashed label="function_call"]
  78 -> 126 [style=dashed label="arguments"]
  78 -> 127 [style=dashed label="arguments_list"]
  78 -> 128 [style=dashed label="argument"]
  78 -> "78R43" [style=solid]
 "78R43" [label="R43", fillcolor=3, shape=diamond, style=filled]
  79 [label="State 79\n\l 20 expression: expression • expression_operator term\l 31 base: '(' expression • ')'\l"]
  79 -> 80 [style=solid label="'+'"]
  79 -> 81 [style=solid label="'-'"]
  79 -> 129 [style=solid label="')'"]
  79 -> 82 [style=dashed label="expression_operator"]
  80 [label="State 80\n\l 22 expression_operator: '+' •\l"]
  80 -> "80R22" [style=solid]
 "80R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  81 [label="State 81\n\l 23 expression_operator: '-' •\l"]
  81 -> "81R23" [style=solid]
 "81R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  82 [label="State 82\n\l 20 expression: expression expression_operator • term\l"]
  82 -> 36 [style=solid label="ID"]
  82 -> 37 [style=solid label="INT"]
  82 -> 38 [style=solid label="REAL"]
  82 -> 39 [style=solid label="BOOLEAN"]
  82 -> 40 [style=solid label="CHAR"]
  82 -> 41 [style=solid label="STRING"]
  82 -> 42 [style=solid label="'('"]
  82 -> 43 [style=dashed label="id"]
  82 -> 130 [style=dashed label="term"]
  82 -> 46 [style=dashed label="factor"]
  82 -> 47 [style=dashed label="base"]
  82 -> 48 [style=dashed label="literal"]
  82 -> 49 [style=dashed label="id_value"]
  82 -> 50 [style=dashed label="function_call"]
  83 [label="State 83\n\l 26 term_operator: '*' •\l"]
  83 -> "83R26" [style=solid]
 "83R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  84 [label="State 84\n\l 27 term_operator: '/' •\l"]
  84 -> "84R27" [style=solid]
 "84R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  85 [label="State 85\n\l 28 term_operator: '%' •\l"]
  85 -> "85R28" [style=solid]
 "85R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  86 [label="State 86\n\l 24 term: term term_operator • factor\l"]
  86 -> 36 [style=solid label="ID"]
  86 -> 37 [style=solid label="INT"]
  86 -> 38 [style=solid label="REAL"]
  86 -> 39 [style=solid label="BOOLEAN"]
  86 -> 40 [style=solid label="CHAR"]
  86 -> 41 [style=solid label="STRING"]
  86 -> 42 [style=solid label="'('"]
  86 -> 43 [style=dashed label="id"]
  86 -> 131 [style=dashed label="factor"]
  86 -> 47 [style=dashed label="base"]
  86 -> 48 [style=dashed label="literal"]
  86 -> 49 [style=dashed label="id_value"]
  86 -> 50 [style=dashed label="function_call"]
  87 [label="State 87\n\l 29 factor: base POWER • factor\l"]
  87 -> 36 [style=solid label="ID"]
  87 -> 37 [style=solid label="INT"]
  87 -> 38 [style=solid label="REAL"]
  87 -> 39 [style=solid label="BOOLEAN"]
  87 -> 40 [style=solid label="CHAR"]
  87 -> 41 [style=solid label="STRING"]
  87 -> 42 [style=solid label="'('"]
  87 -> 43 [style=dashed label="id"]
  87 -> 132 [style=dashed label="factor"]
  87 -> 47 [style=dashed label="base"]
  87 -> 48 [style=dashed label="literal"]
  87 -> 49 [style=dashed label="id_value"]
  87 -> 50 [style=dashed label="function_call"]
  88 [label="State 88\n\l 50 double_sign: DOUBLE_PLUS •\l"]
  88 -> "88R50" [style=solid]
 "88R50" [label="R50", fillcolor=3, shape=diamond, style=filled]
  89 [label="State 89\n\l 51 double_sign: DOUBLE_MINUS •\l"]
  89 -> "89R51" [style=solid]
 "89R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  90 [label="State 90\n\l 34 base: id_value double_sign •\l"]
  90 -> "90R34" [style=solid]
 "90R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  91 [label="State 91\n\l 56 signature: subprogram_type subprogram_id '(' • parameters ')'\l"]
  91 -> 133 [style=solid label="TYPE"]
  91 -> 134 [style=dashed label="parameters"]
  91 -> 135 [style=dashed label="parameter_list"]
  91 -> 136 [style=dashed label="parameter"]
  91 -> "91R61" [style=solid]
 "91R61" [label="R61", fillcolor=3, shape=diamond, style=filled]
  92 [label="State 92\n\l123 for_structure: '(' • for_expression ')'\l"]
  92 -> 7 [style=solid label="ID"]
  92 -> 137 [style=solid label="TYPE"]
  92 -> 138 [style=dashed label="id"]
  92 -> 139 [style=dashed label="for_expression"]
  92 -> 140 [style=dashed label="for_assignment"]
  93 [label="State 93\n\l122 for: FOR for_structure • block\l"]
  93 -> 30 [style=solid label="'{'"]
  93 -> 141 [style=dashed label="block"]
  94 [label="State 94\n\l 90 comparison: '(' • compare ')'\l"]
  94 -> 7 [style=solid label="ID"]
  94 -> 96 [style=dashed label="id"]
  94 -> 142 [style=dashed label="compare"]
  95 [label="State 95\n\l 89 comparation: '!' • comparison\l"]
  95 -> 7 [style=solid label="ID"]
  95 -> 94 [style=solid label="'('"]
  95 -> 96 [style=dashed label="id"]
  95 -> 143 [style=dashed label="comparison"]
  95 -> 100 [style=dashed label="compare"]
  96 [label="State 96\n\l 92 compare: id • evaluation_operator expression\l"]
  96 -> 144 [style=solid label="EQUAL"]
  96 -> 145 [style=solid label="NOT_EQUAL"]
  96 -> 146 [style=solid label="EQ_GREATER"]
  96 -> 147 [style=solid label="EQ_SMALLER"]
  96 -> 148 [style=solid label="'>'"]
  96 -> 149 [style=solid label="'<'"]
  96 -> 150 [style=dashed label="evaluation_operator"]
  97 [label="State 97\n\l121 while: WHILE evaluation • block\l"]
  97 -> 30 [style=solid label="'{'"]
  97 -> 151 [style=dashed label="block"]
  98 [label="State 98\n\l 86 evaluation: comparation •\l 87           | comparation • logic_operator evaluation\l"]
  98 -> 152 [style=solid label="AND"]
  98 -> 153 [style=solid label="OR"]
  98 -> 154 [style=solid label="EOR"]
  98 -> 155 [style=dashed label="logic_operator"]
  98 -> "98R86" [style=solid]
 "98R86" [label="R86", fillcolor=3, shape=diamond, style=filled]
  99 [label="State 99\n\l 88 comparation: comparison •\l"]
  99 -> "99R88" [style=solid]
 "99R88" [label="R88", fillcolor=3, shape=diamond, style=filled]
  100 [label="State 100\n\l 91 comparison: compare •\l"]
  100 -> "100R91" [style=solid]
 "100R91" [label="R91", fillcolor=3, shape=diamond, style=filled]
  101 [label="State 101\n\l105 if: IF '(' • evaluation ')' block\l"]
  101 -> 7 [style=solid label="ID"]
  101 -> 94 [style=solid label="'('"]
  101 -> 95 [style=solid label="'!'"]
  101 -> 96 [style=dashed label="id"]
  101 -> 156 [style=dashed label="evaluation"]
  101 -> 98 [style=dashed label="comparation"]
  101 -> 99 [style=dashed label="comparison"]
  101 -> 100 [style=dashed label="compare"]
  102 [label="State 102\n\l112 switch: SWITCH '(' • id_value ')'\l"]
  102 -> 36 [style=solid label="ID"]
  102 -> 43 [style=dashed label="id"]
  102 -> 157 [style=dashed label="id_value"]
  102 -> 50 [style=dashed label="function_call"]
  103 [label="State 103\n\l 20 expression: expression • expression_operator term\l127 return: RETURN expression •\l"]
  103 -> 80 [style=solid label="'+'"]
  103 -> 81 [style=solid label="'-'"]
  103 -> 82 [style=dashed label="expression_operator"]
  103 -> "103R127" [style=solid]
 "103R127" [label="R127", fillcolor=3, shape=diamond, style=filled]
  104 [label="State 104\n\l 69 body: declarations_list statement_list •\l"]
  104 -> "104R69" [style=solid]
 "104R69" [label="R69", fillcolor=3, shape=diamond, style=filled]
  105 [label="State 105\n\l 82 assignment_sign: PLUS_ASSIGN •\l"]
  105 -> "105R82" [style=solid]
 "105R82" [label="R82", fillcolor=3, shape=diamond, style=filled]
  106 [label="State 106\n\l 83 assignment_sign: MINUS_ASSIGN •\l"]
  106 -> "106R83" [style=solid]
 "106R83" [label="R83", fillcolor=3, shape=diamond, style=filled]
  107 [label="State 107\n\l 84 assignment_sign: DIV_ASSIGN •\l"]
  107 -> "107R84" [style=solid]
 "107R84" [label="R84", fillcolor=3, shape=diamond, style=filled]
  108 [label="State 108\n\l 85 assignment_sign: TIMES_ASSIGN •\l"]
  108 -> "108R85" [style=solid]
 "108R85" [label="R85", fillcolor=3, shape=diamond, style=filled]
  109 [label="State 109\n\l 81 assignment_sign: '=' •\l"]
  109 -> "109R81" [style=solid]
 "109R81" [label="R81", fillcolor=3, shape=diamond, style=filled]
  110 [label="State 110\n\l 80 assignment_operation: double_sign •\l"]
  110 -> "110R80" [style=solid]
 "110R80" [label="R80", fillcolor=3, shape=diamond, style=filled]
  111 [label="State 111\n\l 78 assignment: id assignment_operation •\l"]
  111 -> "111R78" [style=solid]
 "111R78" [label="R78", fillcolor=3, shape=diamond, style=filled]
  112 [label="State 112\n\l 79 assignment_operation: assignment_sign • expression\l"]
  112 -> 36 [style=solid label="ID"]
  112 -> 37 [style=solid label="INT"]
  112 -> 38 [style=solid label="REAL"]
  112 -> 39 [style=solid label="BOOLEAN"]
  112 -> 40 [style=solid label="CHAR"]
  112 -> 41 [style=solid label="STRING"]
  112 -> 42 [style=solid label="'('"]
  112 -> 43 [style=dashed label="id"]
  112 -> 158 [style=dashed label="expression"]
  112 -> 45 [style=dashed label="term"]
  112 -> 46 [style=dashed label="factor"]
  112 -> 47 [style=dashed label="base"]
  112 -> 48 [style=dashed label="literal"]
  112 -> 49 [style=dashed label="id_value"]
  112 -> 50 [style=dashed label="function_call"]
  113 [label="State 113\n\l 66 block: '{' body '}' •\l"]
  113 -> "113R66" [style=solid]
 "113R66" [label="R66", fillcolor=3, shape=diamond, style=filled]
  114 [label="State 114\n\l 71 statement_list: statement ';' •\l 72               | statement ';' • statement_list\l"]
  114 -> 7 [style=solid label="ID"]
  114 -> 54 [style=solid label="FOR"]
  114 -> 55 [style=solid label="WHILE"]
  114 -> 56 [style=solid label="IF"]
  114 -> 57 [style=solid label="SWITCH"]
  114 -> 58 [style=solid label="BREAK"]
  114 -> 59 [style=solid label="RETURN"]
  114 -> 61 [style=dashed label="id"]
  114 -> 159 [style=dashed label="statement_list"]
  114 -> 64 [style=dashed label="statement"]
  114 -> 65 [style=dashed label="assignment"]
  114 -> 66 [style=dashed label="conditional"]
  114 -> 67 [style=dashed label="if_else"]
  114 -> 68 [style=dashed label="if"]
  114 -> 69 [style=dashed label="switch_case"]
  114 -> 70 [style=dashed label="switch"]
  114 -> 71 [style=dashed label="loop"]
  114 -> 72 [style=dashed label="while"]
  114 -> 73 [style=dashed label="for"]
  114 -> 74 [style=dashed label="return"]
  114 -> "114R71" [style=solid]
 "114R71" [label="R71", fillcolor=3, shape=diamond, style=filled]
  115 [label="State 115\n\l109 else_if: ELSE_IF • '(' evaluation ')' block\l"]
  115 -> 160 [style=solid label="'('"]
  116 [label="State 116\n\l110 else: ELSE • block\l"]
  116 -> 30 [style=solid label="'{'"]
  116 -> 161 [style=dashed label="block"]
  117 [label="State 117\n\l104 if_else: if else_section •\l"]
  117 -> "117R104" [style=solid]
 "117R104" [label="R104", fillcolor=3, shape=diamond, style=filled]
  118 [label="State 118\n\l107 else_section: else_if • else_section\l"]
  118 -> 115 [style=solid label="ELSE_IF"]
  118 -> 116 [style=solid label="ELSE"]
  118 -> 162 [style=dashed label="else_section"]
  118 -> 118 [style=dashed label="else_if"]
  118 -> 119 [style=dashed label="else"]
  118 -> "118R106" [style=solid]
 "118R106" [label="R106", fillcolor=3, shape=diamond, style=filled]
  119 [label="State 119\n\l108 else_section: else •\l"]
  119 -> "119R108" [style=solid]
 "119R108" [label="R108", fillcolor=3, shape=diamond, style=filled]
  120 [label="State 120\n\l111 switch_case: switch '{' • case_section default_section '}'\l"]
  120 -> 163 [style=solid label="CASE"]
  120 -> 164 [style=dashed label="case_section"]
  120 -> 165 [style=dashed label="case"]
  121 [label="State 121\n\l 18 dimensions_value: '[' • INT ']'\l 19                 | '[' • INT ']' dimensions_value\l"]
  121 -> 33 [style=solid label="INT"]
  122 [label="State 122\n\l 19 dimensions_value: '[' INT ']' dimensions_value •\l"]
  122 -> "122R19" [style=solid]
 "122R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  123 [label="State 123\n\l 47 argument: id_declaration •\l"]
  123 -> "123R47" [style=solid]
 "123R47" [label="R47", fillcolor=3, shape=diamond, style=filled]
  124 [label="State 124\n\l 48 argument: literal •\l"]
  124 -> "124R48" [style=solid]
 "124R48" [label="R48", fillcolor=3, shape=diamond, style=filled]
  125 [label="State 125\n\l 49 argument: function_call •\l"]
  125 -> "125R49" [style=solid]
 "125R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  126 [label="State 126\n\l 42 function_call: ID '(' arguments • ')'\l"]
  126 -> 166 [style=solid label="')'"]
  127 [label="State 127\n\l 44 arguments: arguments_list •\l"]
  127 -> "127R44" [style=solid]
 "127R44" [label="R44", fillcolor=3, shape=diamond, style=filled]
  128 [label="State 128\n\l 45 arguments_list: argument •\l 46               | argument • ',' arguments_list\l"]
  128 -> 167 [style=solid label="','"]
  128 -> "128R45" [style=solid]
 "128R45" [label="R45", fillcolor=3, shape=diamond, style=filled]
  129 [label="State 129\n\l 31 base: '(' expression ')' •\l"]
  129 -> "129R31" [style=solid]
 "129R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  130 [label="State 130\n\l 20 expression: expression expression_operator term •\l 24 term: term • term_operator factor\l"]
  130 -> 83 [style=solid label="'*'"]
  130 -> 84 [style=solid label="'/'"]
  130 -> 85 [style=solid label="'%'"]
  130 -> 86 [style=dashed label="term_operator"]
  130 -> "130R20" [style=solid]
 "130R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  131 [label="State 131\n\l 24 term: term term_operator factor •\l"]
  131 -> "131R24" [style=solid]
 "131R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  132 [label="State 132\n\l 29 factor: base POWER factor •\l"]
  132 -> "132R29" [style=solid]
 "132R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  133 [label="State 133\n\l 65 parameter: TYPE • id\l"]
  133 -> 7 [style=solid label="ID"]
  133 -> 168 [style=dashed label="id"]
  134 [label="State 134\n\l 56 signature: subprogram_type subprogram_id '(' parameters • ')'\l"]
  134 -> 169 [style=solid label="')'"]
  135 [label="State 135\n\l 62 parameters: parameter_list •\l"]
  135 -> "135R62" [style=solid]
 "135R62" [label="R62", fillcolor=3, shape=diamond, style=filled]
  136 [label="State 136\n\l 63 parameter_list: parameter •\l 64               | parameter • ',' parameter_list\l"]
  136 -> 170 [style=solid label="','"]
  136 -> "136R63" [style=solid]
 "136R63" [label="R63", fillcolor=3, shape=diamond, style=filled]
  137 [label="State 137\n\l126 for_assignment: TYPE • id '=' expression\l"]
  137 -> 7 [style=solid label="ID"]
  137 -> 171 [style=dashed label="id"]
  138 [label="State 138\n\l125 for_assignment: id • '=' expression\l"]
  138 -> 172 [style=solid label="'='"]
  139 [label="State 139\n\l123 for_structure: '(' for_expression • ')'\l"]
  139 -> 173 [style=solid label="')'"]
  140 [label="State 140\n\l124 for_expression: for_assignment • ';' evaluation ';' assignment\l"]
  140 -> 174 [style=solid label="';'"]
  141 [label="State 141\n\l122 for: FOR for_structure block •\l"]
  141 -> "141R122" [style=solid]
 "141R122" [label="R122", fillcolor=3, shape=diamond, style=filled]
  142 [label="State 142\n\l 90 comparison: '(' compare • ')'\l"]
  142 -> 175 [style=solid label="')'"]
  143 [label="State 143\n\l 89 comparation: '!' comparison •\l"]
  143 -> "143R89" [style=solid]
 "143R89" [label="R89", fillcolor=3, shape=diamond, style=filled]
  144 [label="State 144\n\l 93 evaluation_operator: EQUAL •\l"]
  144 -> "144R93" [style=solid]
 "144R93" [label="R93", fillcolor=3, shape=diamond, style=filled]
  145 [label="State 145\n\l 94 evaluation_operator: NOT_EQUAL •\l"]
  145 -> "145R94" [style=solid]
 "145R94" [label="R94", fillcolor=3, shape=diamond, style=filled]
  146 [label="State 146\n\l 97 evaluation_operator: EQ_GREATER •\l"]
  146 -> "146R97" [style=solid]
 "146R97" [label="R97", fillcolor=3, shape=diamond, style=filled]
  147 [label="State 147\n\l 98 evaluation_operator: EQ_SMALLER •\l"]
  147 -> "147R98" [style=solid]
 "147R98" [label="R98", fillcolor=3, shape=diamond, style=filled]
  148 [label="State 148\n\l 95 evaluation_operator: '>' •\l"]
  148 -> "148R95" [style=solid]
 "148R95" [label="R95", fillcolor=3, shape=diamond, style=filled]
  149 [label="State 149\n\l 96 evaluation_operator: '<' •\l"]
  149 -> "149R96" [style=solid]
 "149R96" [label="R96", fillcolor=3, shape=diamond, style=filled]
  150 [label="State 150\n\l 92 compare: id evaluation_operator • expression\l"]
  150 -> 36 [style=solid label="ID"]
  150 -> 37 [style=solid label="INT"]
  150 -> 38 [style=solid label="REAL"]
  150 -> 39 [style=solid label="BOOLEAN"]
  150 -> 40 [style=solid label="CHAR"]
  150 -> 41 [style=solid label="STRING"]
  150 -> 42 [style=solid label="'('"]
  150 -> 43 [style=dashed label="id"]
  150 -> 176 [style=dashed label="expression"]
  150 -> 45 [style=dashed label="term"]
  150 -> 46 [style=dashed label="factor"]
  150 -> 47 [style=dashed label="base"]
  150 -> 48 [style=dashed label="literal"]
  150 -> 49 [style=dashed label="id_value"]
  150 -> 50 [style=dashed label="function_call"]
  151 [label="State 151\n\l121 while: WHILE evaluation block •\l"]
  151 -> "151R121" [style=solid]
 "151R121" [label="R121", fillcolor=3, shape=diamond, style=filled]
  152 [label="State 152\n\l 99 logic_operator: AND •\l"]
  152 -> "152R99" [style=solid]
 "152R99" [label="R99", fillcolor=3, shape=diamond, style=filled]
  153 [label="State 153\n\l100 logic_operator: OR •\l"]
  153 -> "153R100" [style=solid]
 "153R100" [label="R100", fillcolor=3, shape=diamond, style=filled]
  154 [label="State 154\n\l101 logic_operator: EOR •\l"]
  154 -> "154R101" [style=solid]
 "154R101" [label="R101", fillcolor=3, shape=diamond, style=filled]
  155 [label="State 155\n\l 87 evaluation: comparation logic_operator • evaluation\l"]
  155 -> 7 [style=solid label="ID"]
  155 -> 94 [style=solid label="'('"]
  155 -> 95 [style=solid label="'!'"]
  155 -> 96 [style=dashed label="id"]
  155 -> 177 [style=dashed label="evaluation"]
  155 -> 98 [style=dashed label="comparation"]
  155 -> 99 [style=dashed label="comparison"]
  155 -> 100 [style=dashed label="compare"]
  156 [label="State 156\n\l105 if: IF '(' evaluation • ')' block\l"]
  156 -> 178 [style=solid label="')'"]
  157 [label="State 157\n\l112 switch: SWITCH '(' id_value • ')'\l"]
  157 -> 179 [style=solid label="')'"]
  158 [label="State 158\n\l 20 expression: expression • expression_operator term\l 79 assignment_operation: assignment_sign expression •\l"]
  158 -> 80 [style=solid label="'+'"]
  158 -> 81 [style=solid label="'-'"]
  158 -> 82 [style=dashed label="expression_operator"]
  158 -> "158R79" [style=solid]
 "158R79" [label="R79", fillcolor=3, shape=diamond, style=filled]
  159 [label="State 159\n\l 72 statement_list: statement ';' statement_list •\l"]
  159 -> "159R72" [style=solid]
 "159R72" [label="R72", fillcolor=3, shape=diamond, style=filled]
  160 [label="State 160\n\l109 else_if: ELSE_IF '(' • evaluation ')' block\l"]
  160 -> 7 [style=solid label="ID"]
  160 -> 94 [style=solid label="'('"]
  160 -> 95 [style=solid label="'!'"]
  160 -> 96 [style=dashed label="id"]
  160 -> 180 [style=dashed label="evaluation"]
  160 -> 98 [style=dashed label="comparation"]
  160 -> 99 [style=dashed label="comparison"]
  160 -> 100 [style=dashed label="compare"]
  161 [label="State 161\n\l110 else: ELSE block •\l"]
  161 -> "161R110" [style=solid]
 "161R110" [label="R110", fillcolor=3, shape=diamond, style=filled]
  162 [label="State 162\n\l107 else_section: else_if else_section •\l"]
  162 -> "162R107" [style=solid]
 "162R107" [label="R107", fillcolor=3, shape=diamond, style=filled]
  163 [label="State 163\n\l115 case: CASE • literal ':' body\l"]
  163 -> 37 [style=solid label="INT"]
  163 -> 38 [style=solid label="REAL"]
  163 -> 39 [style=solid label="BOOLEAN"]
  163 -> 40 [style=solid label="CHAR"]
  163 -> 41 [style=solid label="STRING"]
  163 -> 181 [style=dashed label="literal"]
  164 [label="State 164\n\l111 switch_case: switch '{' case_section • default_section '}'\l"]
  164 -> 182 [style=solid label="DEFAULT"]
  164 -> 183 [style=dashed label="default_section"]
  164 -> 184 [style=dashed label="default"]
  164 -> "164R116" [style=solid]
 "164R116" [label="R116", fillcolor=3, shape=diamond, style=filled]
  165 [label="State 165\n\l113 case_section: case •\l114             | case • case_section\l"]
  165 -> 163 [style=solid label="CASE"]
  165 -> 185 [style=dashed label="case_section"]
  165 -> 165 [style=dashed label="case"]
  165 -> "165R113" [style=solid]
 "165R113" [label="R113", fillcolor=3, shape=diamond, style=filled]
  166 [label="State 166\n\l 42 function_call: ID '(' arguments ')' •\l"]
  166 -> "166R42" [style=solid]
 "166R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  167 [label="State 167\n\l 46 arguments_list: argument ',' • arguments_list\l"]
  167 -> 36 [style=solid label="ID"]
  167 -> 37 [style=solid label="INT"]
  167 -> 38 [style=solid label="REAL"]
  167 -> 39 [style=solid label="BOOLEAN"]
  167 -> 40 [style=solid label="CHAR"]
  167 -> 41 [style=solid label="STRING"]
  167 -> 123 [style=dashed label="id_declaration"]
  167 -> 10 [style=dashed label="id"]
  167 -> 124 [style=dashed label="literal"]
  167 -> 125 [style=dashed label="function_call"]
  167 -> 186 [style=dashed label="arguments_list"]
  167 -> 128 [style=dashed label="argument"]
  168 [label="State 168\n\l 65 parameter: TYPE id •\l"]
  168 -> "168R65" [style=solid]
 "168R65" [label="R65", fillcolor=3, shape=diamond, style=filled]
  169 [label="State 169\n\l 56 signature: subprogram_type subprogram_id '(' parameters ')' •\l"]
  169 -> "169R56" [style=solid]
 "169R56" [label="R56", fillcolor=3, shape=diamond, style=filled]
  170 [label="State 170\n\l 64 parameter_list: parameter ',' • parameter_list\l"]
  170 -> 133 [style=solid label="TYPE"]
  170 -> 187 [style=dashed label="parameter_list"]
  170 -> 136 [style=dashed label="parameter"]
  171 [label="State 171\n\l126 for_assignment: TYPE id • '=' expression\l"]
  171 -> 188 [style=solid label="'='"]
  172 [label="State 172\n\l125 for_assignment: id '=' • expression\l"]
  172 -> 36 [style=solid label="ID"]
  172 -> 37 [style=solid label="INT"]
  172 -> 38 [style=solid label="REAL"]
  172 -> 39 [style=solid label="BOOLEAN"]
  172 -> 40 [style=solid label="CHAR"]
  172 -> 41 [style=solid label="STRING"]
  172 -> 42 [style=solid label="'('"]
  172 -> 43 [style=dashed label="id"]
  172 -> 189 [style=dashed label="expression"]
  172 -> 45 [style=dashed label="term"]
  172 -> 46 [style=dashed label="factor"]
  172 -> 47 [style=dashed label="base"]
  172 -> 48 [style=dashed label="literal"]
  172 -> 49 [style=dashed label="id_value"]
  172 -> 50 [style=dashed label="function_call"]
  173 [label="State 173\n\l123 for_structure: '(' for_expression ')' •\l"]
  173 -> "173R123" [style=solid]
 "173R123" [label="R123", fillcolor=3, shape=diamond, style=filled]
  174 [label="State 174\n\l124 for_expression: for_assignment ';' • evaluation ';' assignment\l"]
  174 -> 7 [style=solid label="ID"]
  174 -> 94 [style=solid label="'('"]
  174 -> 95 [style=solid label="'!'"]
  174 -> 96 [style=dashed label="id"]
  174 -> 190 [style=dashed label="evaluation"]
  174 -> 98 [style=dashed label="comparation"]
  174 -> 99 [style=dashed label="comparison"]
  174 -> 100 [style=dashed label="compare"]
  175 [label="State 175\n\l 90 comparison: '(' compare ')' •\l"]
  175 -> "175R90" [style=solid]
 "175R90" [label="R90", fillcolor=3, shape=diamond, style=filled]
  176 [label="State 176\n\l 20 expression: expression • expression_operator term\l 92 compare: id evaluation_operator expression •\l"]
  176 -> 80 [style=solid label="'+'"]
  176 -> 81 [style=solid label="'-'"]
  176 -> 82 [style=dashed label="expression_operator"]
  176 -> "176R92" [style=solid]
 "176R92" [label="R92", fillcolor=3, shape=diamond, style=filled]
  177 [label="State 177\n\l 87 evaluation: comparation logic_operator evaluation •\l"]
  177 -> "177R87" [style=solid]
 "177R87" [label="R87", fillcolor=3, shape=diamond, style=filled]
  178 [label="State 178\n\l105 if: IF '(' evaluation ')' • block\l"]
  178 -> 30 [style=solid label="'{'"]
  178 -> 191 [style=dashed label="block"]
  179 [label="State 179\n\l112 switch: SWITCH '(' id_value ')' •\l"]
  179 -> "179R112" [style=solid]
 "179R112" [label="R112", fillcolor=3, shape=diamond, style=filled]
  180 [label="State 180\n\l109 else_if: ELSE_IF '(' evaluation • ')' block\l"]
  180 -> 192 [style=solid label="')'"]
  181 [label="State 181\n\l115 case: CASE literal • ':' body\l"]
  181 -> 193 [style=solid label="':'"]
  182 [label="State 182\n\l118 default: DEFAULT • ':' body\l"]
  182 -> 194 [style=solid label="':'"]
  183 [label="State 183\n\l111 switch_case: switch '{' case_section default_section • '}'\l"]
  183 -> 195 [style=solid label="'}'"]
  184 [label="State 184\n\l117 default_section: default •\l"]
  184 -> "184R117" [style=solid]
 "184R117" [label="R117", fillcolor=3, shape=diamond, style=filled]
  185 [label="State 185\n\l114 case_section: case case_section •\l"]
  185 -> "185R114" [style=solid]
 "185R114" [label="R114", fillcolor=3, shape=diamond, style=filled]
  186 [label="State 186\n\l 46 arguments_list: argument ',' arguments_list •\l"]
  186 -> "186R46" [style=solid]
 "186R46" [label="R46", fillcolor=3, shape=diamond, style=filled]
  187 [label="State 187\n\l 64 parameter_list: parameter ',' parameter_list •\l"]
  187 -> "187R64" [style=solid]
 "187R64" [label="R64", fillcolor=3, shape=diamond, style=filled]
  188 [label="State 188\n\l126 for_assignment: TYPE id '=' • expression\l"]
  188 -> 36 [style=solid label="ID"]
  188 -> 37 [style=solid label="INT"]
  188 -> 38 [style=solid label="REAL"]
  188 -> 39 [style=solid label="BOOLEAN"]
  188 -> 40 [style=solid label="CHAR"]
  188 -> 41 [style=solid label="STRING"]
  188 -> 42 [style=solid label="'('"]
  188 -> 43 [style=dashed label="id"]
  188 -> 196 [style=dashed label="expression"]
  188 -> 45 [style=dashed label="term"]
  188 -> 46 [style=dashed label="factor"]
  188 -> 47 [style=dashed label="base"]
  188 -> 48 [style=dashed label="literal"]
  188 -> 49 [style=dashed label="id_value"]
  188 -> 50 [style=dashed label="function_call"]
  189 [label="State 189\n\l 20 expression: expression • expression_operator term\l125 for_assignment: id '=' expression •\l"]
  189 -> 80 [style=solid label="'+'"]
  189 -> 81 [style=solid label="'-'"]
  189 -> 82 [style=dashed label="expression_operator"]
  189 -> "189R125" [style=solid]
 "189R125" [label="R125", fillcolor=3, shape=diamond, style=filled]
  190 [label="State 190\n\l124 for_expression: for_assignment ';' evaluation • ';' assignment\l"]
  190 -> 197 [style=solid label="';'"]
  191 [label="State 191\n\l105 if: IF '(' evaluation ')' block •\l"]
  191 -> "191R105" [style=solid]
 "191R105" [label="R105", fillcolor=3, shape=diamond, style=filled]
  192 [label="State 192\n\l109 else_if: ELSE_IF '(' evaluation ')' • block\l"]
  192 -> 30 [style=solid label="'{'"]
  192 -> 198 [style=dashed label="block"]
  193 [label="State 193\n\l115 case: CASE literal ':' • body\l"]
  193 -> 7 [style=solid label="ID"]
  193 -> 1 [style=solid label="TYPE"]
  193 -> 2 [style=solid label="CONSTANT"]
  193 -> 54 [style=solid label="FOR"]
  193 -> 55 [style=solid label="WHILE"]
  193 -> 56 [style=solid label="IF"]
  193 -> 57 [style=solid label="SWITCH"]
  193 -> 58 [style=solid label="BREAK"]
  193 -> 59 [style=solid label="RETURN"]
  193 -> 60 [style=dashed label="declarations_list"]
  193 -> 6 [style=dashed label="declaration"]
  193 -> 61 [style=dashed label="id"]
  193 -> 199 [style=dashed label="body"]
  193 -> 63 [style=dashed label="statement_list"]
  193 -> 64 [style=dashed label="statement"]
  193 -> 65 [style=dashed label="assignment"]
  193 -> 66 [style=dashed label="conditional"]
  193 -> 67 [style=dashed label="if_else"]
  193 -> 68 [style=dashed label="if"]
  193 -> 69 [style=dashed label="switch_case"]
  193 -> 70 [style=dashed label="switch"]
  193 -> 71 [style=dashed label="loop"]
  193 -> 72 [style=dashed label="while"]
  193 -> 73 [style=dashed label="for"]
  193 -> 74 [style=dashed label="return"]
  193 -> "193R67" [style=solid]
 "193R67" [label="R67", fillcolor=3, shape=diamond, style=filled]
  194 [label="State 194\n\l118 default: DEFAULT ':' • body\l"]
  194 -> 7 [style=solid label="ID"]
  194 -> 1 [style=solid label="TYPE"]
  194 -> 2 [style=solid label="CONSTANT"]
  194 -> 54 [style=solid label="FOR"]
  194 -> 55 [style=solid label="WHILE"]
  194 -> 56 [style=solid label="IF"]
  194 -> 57 [style=solid label="SWITCH"]
  194 -> 58 [style=solid label="BREAK"]
  194 -> 59 [style=solid label="RETURN"]
  194 -> 60 [style=dashed label="declarations_list"]
  194 -> 6 [style=dashed label="declaration"]
  194 -> 61 [style=dashed label="id"]
  194 -> 200 [style=dashed label="body"]
  194 -> 63 [style=dashed label="statement_list"]
  194 -> 64 [style=dashed label="statement"]
  194 -> 65 [style=dashed label="assignment"]
  194 -> 66 [style=dashed label="conditional"]
  194 -> 67 [style=dashed label="if_else"]
  194 -> 68 [style=dashed label="if"]
  194 -> 69 [style=dashed label="switch_case"]
  194 -> 70 [style=dashed label="switch"]
  194 -> 71 [style=dashed label="loop"]
  194 -> 72 [style=dashed label="while"]
  194 -> 73 [style=dashed label="for"]
  194 -> 74 [style=dashed label="return"]
  194 -> "194R67" [style=solid]
 "194R67" [label="R67", fillcolor=3, shape=diamond, style=filled]
  195 [label="State 195\n\l111 switch_case: switch '{' case_section default_section '}' •\l"]
  195 -> "195R111" [style=solid]
 "195R111" [label="R111", fillcolor=3, shape=diamond, style=filled]
  196 [label="State 196\n\l 20 expression: expression • expression_operator term\l126 for_assignment: TYPE id '=' expression •\l"]
  196 -> 80 [style=solid label="'+'"]
  196 -> 81 [style=solid label="'-'"]
  196 -> 82 [style=dashed label="expression_operator"]
  196 -> "196R126" [style=solid]
 "196R126" [label="R126", fillcolor=3, shape=diamond, style=filled]
  197 [label="State 197\n\l124 for_expression: for_assignment ';' evaluation ';' • assignment\l"]
  197 -> 7 [style=solid label="ID"]
  197 -> 61 [style=dashed label="id"]
  197 -> 201 [style=dashed label="assignment"]
  198 [label="State 198\n\l109 else_if: ELSE_IF '(' evaluation ')' block •\l"]
  198 -> "198R109" [style=solid]
 "198R109" [label="R109", fillcolor=3, shape=diamond, style=filled]
  199 [label="State 199\n\l115 case: CASE literal ':' body •\l"]
  199 -> "199R115" [style=solid]
 "199R115" [label="R115", fillcolor=3, shape=diamond, style=filled]
  200 [label="State 200\n\l118 default: DEFAULT ':' body •\l"]
  200 -> "200R118" [style=solid]
 "200R118" [label="R118", fillcolor=3, shape=diamond, style=filled]
  201 [label="State 201\n\l124 for_expression: for_assignment ';' evaluation ';' assignment •\l"]
  201 -> "201R124" [style=solid]
 "201R124" [label="R124", fillcolor=3, shape=diamond, style=filled]
}
