// Generated by GNU Bison 3.5.1.
// Report bugs to <bug-bison@gnu.org>.
// Home page: <https://www.gnu.org/software/bison/>.

digraph "parser.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="State 0\n\l  0 $accept: . program $end\l"]
  0 -> 1 [style=solid label="TYPE"]
  0 -> 2 [style=solid label="CONSTANT"]
  0 -> 3 [style=solid label="FUNCTION"]
  0 -> 4 [style=dashed label="program"]
  0 -> 5 [style=dashed label="declarations_section"]
  0 -> 6 [style=dashed label="declarations_list"]
  0 -> 7 [style=dashed label="declaration"]
  0 -> 8 [style=dashed label="subprograms_section"]
  0 -> 9 [style=dashed label="subprogram"]
  0 -> 10 [style=dashed label="header"]
  1 [label="State 1\n\l  6 declaration: TYPE . id_list\l"]
  1 -> 11 [style=solid label="ID"]
  1 -> 12 [style=dashed label="id_list"]
  1 -> 13 [style=dashed label="id_declaration"]
  1 -> 14 [style=dashed label="id"]
  2 [label="State 2\n\l  7 declaration: CONSTANT . TYPE id_list\l"]
  2 -> 15 [style=solid label="TYPE"]
  3 [label="State 3\n\l 56 header: FUNCTION . signature\l"]
  3 -> 16 [style=solid label="VOID"]
  3 -> 17 [style=solid label="TYPE"]
  3 -> 18 [style=solid label="MAIN_FUN"]
  3 -> 19 [style=dashed label="signature"]
  3 -> 20 [style=dashed label="subprogram_type"]
  3 -> 21 [style=dashed label="subprogram_main"]
  4 [label="State 4\n\l  0 $accept: program . $end\l"]
  4 -> 22 [style=solid label="$end"]
  5 [label="State 5\n\l  1 program: declarations_section . subprograms_section\l"]
  5 -> 3 [style=solid label="FUNCTION"]
  5 -> 23 [style=dashed label="subprograms_section"]
  5 -> 9 [style=dashed label="subprogram"]
  5 -> 10 [style=dashed label="header"]
  6 [label="State 6\n\l  3 declarations_section: declarations_list .\l"]
  6 -> "6R3" [style=solid]
 "6R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  7 [label="State 7\n\l  4 declarations_list: declaration . ';'\l  5                  | declaration . ';' declarations_list\l"]
  7 -> 24 [style=solid label="';'"]
  8 [label="State 8\n\l  2 program: subprograms_section .\l"]
  8 -> "8R2" [style=solid]
 "8R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  9 [label="State 9\n\l 53 subprograms_section: subprogram .\l 54                    | subprogram . subprograms_section\l"]
  9 -> 3 [style=solid label="FUNCTION"]
  9 -> 25 [style=dashed label="subprograms_section"]
  9 -> 9 [style=dashed label="subprogram"]
  9 -> 10 [style=dashed label="header"]
  9 -> "9R53" [style=solid]
 "9R53" [label="R53", fillcolor=3, shape=diamond, style=filled]
  10 [label="State 10\n\l 55 subprogram: header . block\l"]
  10 -> 26 [style=solid label="'{'"]
  10 -> 27 [style=dashed label="block"]
  11 [label="State 11\n\l 12 id: ID . dimensions\l"]
  11 -> 28 [style=solid label="'['"]
  11 -> 29 [style=dashed label="dimensions"]
  11 -> 30 [style=dashed label="dimensions_novalue"]
  11 -> 31 [style=dashed label="dimensions_value"]
  11 -> "11R13" [style=solid]
 "11R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  12 [label="State 12\n\l  6 declaration: TYPE id_list .\l"]
  12 -> "12R6" [style=solid]
 "12R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  13 [label="State 13\n\l  8 id_list: id_declaration .\l  9        | id_declaration . ',' id_list\l"]
  13 -> 32 [style=solid label="','"]
  13 -> "13R8" [style=solid]
 "13R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  14 [label="State 14\n\l 10 id_declaration: id .\l 11               | id . '=' expression\l"]
  14 -> 33 [style=solid label="'='"]
  14 -> "14R10" [style=solid]
 "14R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  15 [label="State 15\n\l  7 declaration: CONSTANT TYPE . id_list\l"]
  15 -> 11 [style=solid label="ID"]
  15 -> 34 [style=dashed label="id_list"]
  15 -> 13 [style=dashed label="id_declaration"]
  15 -> 14 [style=dashed label="id"]
  16 [label="State 16\n\l 60 subprogram_type: VOID .\l"]
  16 -> "16R60" [style=solid]
 "16R60" [label="R60", fillcolor=3, shape=diamond, style=filled]
  17 [label="State 17\n\l 59 subprogram_type: TYPE .\l"]
  17 -> "17R59" [style=solid]
 "17R59" [label="R59", fillcolor=3, shape=diamond, style=filled]
  18 [label="State 18\n\l 61 subprogram_main: MAIN_FUN .\l"]
  18 -> "18R61" [style=solid]
 "18R61" [label="R61", fillcolor=3, shape=diamond, style=filled]
  19 [label="State 19\n\l 56 header: FUNCTION signature .\l"]
  19 -> "19R56" [style=solid]
 "19R56" [label="R56", fillcolor=3, shape=diamond, style=filled]
  20 [label="State 20\n\l 57 signature: subprogram_type . subprogram_id '(' parameters ')'\l"]
  20 -> 35 [style=solid label="ID"]
  20 -> 36 [style=dashed label="subprogram_id"]
  21 [label="State 21\n\l 58 signature: subprogram_main . '(' ')'\l"]
  21 -> 37 [style=solid label="'('"]
  22 [label="State 22\n\l  0 $accept: program $end .\l"]
  22 -> "22R0" [style=solid]
 "22R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  23 [label="State 23\n\l  1 program: declarations_section subprograms_section .\l"]
  23 -> "23R1" [style=solid]
 "23R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  24 [label="State 24\n\l  4 declarations_list: declaration ';' .\l  5                  | declaration ';' . declarations_list\l"]
  24 -> 1 [style=solid label="TYPE"]
  24 -> 2 [style=solid label="CONSTANT"]
  24 -> 38 [style=dashed label="declarations_list"]
  24 -> 7 [style=dashed label="declaration"]
  24 -> "24R4" [style=solid]
 "24R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  25 [label="State 25\n\l 54 subprograms_section: subprogram subprograms_section .\l"]
  25 -> "25R54" [style=solid]
 "25R54" [label="R54", fillcolor=3, shape=diamond, style=filled]
  26 [label="State 26\n\l 68 block: '{' . body '}'\l"]
  26 -> 11 [style=solid label="ID"]
  26 -> 1 [style=solid label="TYPE"]
  26 -> 39 [style=solid label="PRINT"]
  26 -> 40 [style=solid label="READ"]
  26 -> 2 [style=solid label="CONSTANT"]
  26 -> 41 [style=solid label="FOR"]
  26 -> 42 [style=solid label="WHILE"]
  26 -> 43 [style=solid label="IF"]
  26 -> 44 [style=solid label="SWITCH"]
  26 -> 45 [style=solid label="BREAK"]
  26 -> 46 [style=solid label="RETURN"]
  26 -> 47 [style=dashed label="declarations_list"]
  26 -> 7 [style=dashed label="declaration"]
  26 -> 48 [style=dashed label="id"]
  26 -> 49 [style=dashed label="body"]
  26 -> 50 [style=dashed label="statement_list"]
  26 -> 51 [style=dashed label="statement"]
  26 -> 52 [style=dashed label="assignment"]
  26 -> 53 [style=dashed label="print"]
  26 -> 54 [style=dashed label="read"]
  26 -> 55 [style=dashed label="conditional"]
  26 -> 56 [style=dashed label="if_else"]
  26 -> 57 [style=dashed label="if"]
  26 -> 58 [style=dashed label="switch_case"]
  26 -> 59 [style=dashed label="switch"]
  26 -> 60 [style=dashed label="loop"]
  26 -> 61 [style=dashed label="while"]
  26 -> 62 [style=dashed label="for"]
  26 -> 63 [style=dashed label="return"]
  26 -> "26R69" [style=solid]
 "26R69" [label="R69", fillcolor=3, shape=diamond, style=filled]
  27 [label="State 27\n\l 55 subprogram: header block .\l"]
  27 -> "27R55" [style=solid]
 "27R55" [label="R55", fillcolor=3, shape=diamond, style=filled]
  28 [label="State 28\n\l 16 dimensions_novalue: '[' . ']'\l 17                   | '[' . ']' dimensions_novalue\l 18 dimensions_value: '[' . INT ']'\l 19                 | '[' . INT ']' dimensions_value\l"]
  28 -> 64 [style=solid label="INT"]
  28 -> 65 [style=solid label="']'"]
  29 [label="State 29\n\l 12 id: ID dimensions .\l"]
  29 -> "29R12" [style=solid]
 "29R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  30 [label="State 30\n\l 14 dimensions: dimensions_novalue .\l"]
  30 -> "30R14" [style=solid]
 "30R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  31 [label="State 31\n\l 15 dimensions: dimensions_value .\l"]
  31 -> "31R15" [style=solid]
 "31R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  32 [label="State 32\n\l  9 id_list: id_declaration ',' . id_list\l"]
  32 -> 11 [style=solid label="ID"]
  32 -> 66 [style=dashed label="id_list"]
  32 -> 13 [style=dashed label="id_declaration"]
  32 -> 14 [style=dashed label="id"]
  33 [label="State 33\n\l 11 id_declaration: id '=' . expression\l"]
  33 -> 67 [style=solid label="ID"]
  33 -> 68 [style=solid label="INT"]
  33 -> 69 [style=solid label="REAL"]
  33 -> 70 [style=solid label="BOOLEAN"]
  33 -> 71 [style=solid label="CHAR"]
  33 -> 72 [style=solid label="STRING"]
  33 -> 73 [style=solid label="NULO"]
  33 -> 74 [style=solid label="'('"]
  33 -> 75 [style=dashed label="id"]
  33 -> 76 [style=dashed label="expression"]
  33 -> 77 [style=dashed label="term"]
  33 -> 78 [style=dashed label="factor"]
  33 -> 79 [style=dashed label="base"]
  33 -> 80 [style=dashed label="literal"]
  33 -> 81 [style=dashed label="id_value"]
  33 -> 82 [style=dashed label="function_call"]
  34 [label="State 34\n\l  7 declaration: CONSTANT TYPE id_list .\l"]
  34 -> "34R7" [style=solid]
 "34R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  35 [label="State 35\n\l 62 subprogram_id: ID .\l"]
  35 -> "35R62" [style=solid]
 "35R62" [label="R62", fillcolor=3, shape=diamond, style=filled]
  36 [label="State 36\n\l 57 signature: subprogram_type subprogram_id . '(' parameters ')'\l"]
  36 -> 83 [style=solid label="'('"]
  37 [label="State 37\n\l 58 signature: subprogram_main '(' . ')'\l"]
  37 -> 84 [style=solid label="')'"]
  38 [label="State 38\n\l  5 declarations_list: declaration ';' declarations_list .\l"]
  38 -> "38R5" [style=solid]
 "38R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  39 [label="State 39\n\l106 print: PRINT . '(' print_content ')'\l"]
  39 -> 85 [style=solid label="'('"]
  40 [label="State 40\n\l109 read: READ . '(' ID ')'\l110     | READ . '(' ')'\l"]
  40 -> 86 [style=solid label="'('"]
  41 [label="State 41\n\l131 for: FOR . for_structure block\l"]
  41 -> 87 [style=solid label="'('"]
  41 -> 88 [style=dashed label="for_structure"]
  42 [label="State 42\n\l130 while: WHILE . evaluation block\l"]
  42 -> 11 [style=solid label="ID"]
  42 -> 89 [style=solid label="'('"]
  42 -> 90 [style=solid label="'!'"]
  42 -> 91 [style=dashed label="id"]
  42 -> 92 [style=dashed label="evaluation"]
  42 -> 93 [style=dashed label="comparation"]
  42 -> 94 [style=dashed label="comparison"]
  42 -> 95 [style=dashed label="compare"]
  43 [label="State 43\n\l114 if: IF . '(' evaluation ')' block\l"]
  43 -> 96 [style=solid label="'('"]
  44 [label="State 44\n\l121 switch: SWITCH . '(' id_value ')'\l"]
  44 -> 97 [style=solid label="'('"]
  45 [label="State 45\n\l 81 statement: BREAK .\l"]
  45 -> "45R81" [style=solid]
 "45R81" [label="R81", fillcolor=3, shape=diamond, style=filled]
  46 [label="State 46\n\l136 return: RETURN . expression\l"]
  46 -> 67 [style=solid label="ID"]
  46 -> 68 [style=solid label="INT"]
  46 -> 69 [style=solid label="REAL"]
  46 -> 70 [style=solid label="BOOLEAN"]
  46 -> 71 [style=solid label="CHAR"]
  46 -> 72 [style=solid label="STRING"]
  46 -> 73 [style=solid label="NULO"]
  46 -> 74 [style=solid label="'('"]
  46 -> 75 [style=dashed label="id"]
  46 -> 98 [style=dashed label="expression"]
  46 -> 77 [style=dashed label="term"]
  46 -> 78 [style=dashed label="factor"]
  46 -> 79 [style=dashed label="base"]
  46 -> 80 [style=dashed label="literal"]
  46 -> 81 [style=dashed label="id_value"]
  46 -> 82 [style=dashed label="function_call"]
  47 [label="State 47\n\l 70 body: declarations_list .\l 71     | declarations_list . statement_list\l"]
  47 -> 11 [style=solid label="ID"]
  47 -> 39 [style=solid label="PRINT"]
  47 -> 40 [style=solid label="READ"]
  47 -> 41 [style=solid label="FOR"]
  47 -> 42 [style=solid label="WHILE"]
  47 -> 43 [style=solid label="IF"]
  47 -> 44 [style=solid label="SWITCH"]
  47 -> 45 [style=solid label="BREAK"]
  47 -> 46 [style=solid label="RETURN"]
  47 -> 48 [style=dashed label="id"]
  47 -> 99 [style=dashed label="statement_list"]
  47 -> 51 [style=dashed label="statement"]
  47 -> 52 [style=dashed label="assignment"]
  47 -> 53 [style=dashed label="print"]
  47 -> 54 [style=dashed label="read"]
  47 -> 55 [style=dashed label="conditional"]
  47 -> 56 [style=dashed label="if_else"]
  47 -> 57 [style=dashed label="if"]
  47 -> 58 [style=dashed label="switch_case"]
  47 -> 59 [style=dashed label="switch"]
  47 -> 60 [style=dashed label="loop"]
  47 -> 61 [style=dashed label="while"]
  47 -> 62 [style=dashed label="for"]
  47 -> 63 [style=dashed label="return"]
  47 -> "47R70" [style=solid]
 "47R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
  48 [label="State 48\n\l 82 assignment: id . assignment_operation\l"]
  48 -> 100 [style=solid label="PLUS_ASSIGN"]
  48 -> 101 [style=solid label="MINUS_ASSIGN"]
  48 -> 102 [style=solid label="DIV_ASSIGN"]
  48 -> 103 [style=solid label="TIMES_ASSIGN"]
  48 -> 104 [style=solid label="DOUBLE_PLUS"]
  48 -> 105 [style=solid label="DOUBLE_MINUS"]
  48 -> 106 [style=solid label="'='"]
  48 -> 107 [style=dashed label="double_sign"]
  48 -> 108 [style=dashed label="assignment_operation"]
  48 -> 109 [style=dashed label="assignment_sign"]
  49 [label="State 49\n\l 68 block: '{' body . '}'\l"]
  49 -> 110 [style=solid label="'}'"]
  50 [label="State 50\n\l 72 body: statement_list .\l"]
  50 -> "50R72" [style=solid]
 "50R72" [label="R72", fillcolor=3, shape=diamond, style=filled]
  51 [label="State 51\n\l 73 statement_list: statement . ';'\l 74               | statement . ';' statement_list\l"]
  51 -> 111 [style=solid label="';'"]
  52 [label="State 52\n\l 75 statement: assignment .\l"]
  52 -> "52R75" [style=solid]
 "52R75" [label="R75", fillcolor=3, shape=diamond, style=filled]
  53 [label="State 53\n\l 76 statement: print .\l"]
  53 -> "53R76" [style=solid]
 "53R76" [label="R76", fillcolor=3, shape=diamond, style=filled]
  54 [label="State 54\n\l 78 statement: read .\l"]
  54 -> "54R78" [style=solid]
 "54R78" [label="R78", fillcolor=3, shape=diamond, style=filled]
  55 [label="State 55\n\l 77 statement: conditional .\l"]
  55 -> "55R77" [style=solid]
 "55R77" [label="R77", fillcolor=3, shape=diamond, style=filled]
  56 [label="State 56\n\l111 conditional: if_else .\l"]
  56 -> "56R111" [style=solid]
 "56R111" [label="R111", fillcolor=3, shape=diamond, style=filled]
  57 [label="State 57\n\l113 if_else: if . else_section\l"]
  57 -> 112 [style=solid label="ELSE_IF"]
  57 -> 113 [style=solid label="ELSE"]
  57 -> 114 [style=dashed label="else_section"]
  57 -> 115 [style=dashed label="else_if"]
  57 -> 116 [style=dashed label="else"]
  57 -> "57R115" [style=solid]
 "57R115" [label="R115", fillcolor=3, shape=diamond, style=filled]
  58 [label="State 58\n\l112 conditional: switch_case .\l"]
  58 -> "58R112" [style=solid]
 "58R112" [label="R112", fillcolor=3, shape=diamond, style=filled]
  59 [label="State 59\n\l120 switch_case: switch . '{' case_section default_section '}'\l"]
  59 -> 117 [style=solid label="'{'"]
  60 [label="State 60\n\l 79 statement: loop .\l"]
  60 -> "60R79" [style=solid]
 "60R79" [label="R79", fillcolor=3, shape=diamond, style=filled]
  61 [label="State 61\n\l128 loop: while .\l"]
  61 -> "61R128" [style=solid]
 "61R128" [label="R128", fillcolor=3, shape=diamond, style=filled]
  62 [label="State 62\n\l129 loop: for .\l"]
  62 -> "62R129" [style=solid]
 "62R129" [label="R129", fillcolor=3, shape=diamond, style=filled]
  63 [label="State 63\n\l 80 statement: return .\l"]
  63 -> "63R80" [style=solid]
 "63R80" [label="R80", fillcolor=3, shape=diamond, style=filled]
  64 [label="State 64\n\l 18 dimensions_value: '[' INT . ']'\l 19                 | '[' INT . ']' dimensions_value\l"]
  64 -> 118 [style=solid label="']'"]
  65 [label="State 65\n\l 16 dimensions_novalue: '[' ']' .\l 17                   | '[' ']' . dimensions_novalue\l"]
  65 -> 119 [style=solid label="'['"]
  65 -> 120 [style=dashed label="dimensions_novalue"]
  65 -> "65R16" [style=solid]
 "65R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  66 [label="State 66\n\l  9 id_list: id_declaration ',' id_list .\l"]
  66 -> "66R9" [style=solid]
 "66R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  67 [label="State 67\n\l 12 id: ID . dimensions\l 43 function_call: ID . '(' arguments ')'\l"]
  67 -> 28 [style=solid label="'['"]
  67 -> 121 [style=solid label="'('"]
  67 -> 29 [style=dashed label="dimensions"]
  67 -> 30 [style=dashed label="dimensions_novalue"]
  67 -> 31 [style=dashed label="dimensions_value"]
  67 -> "67R13" [style=solid]
 "67R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  68 [label="State 68\n\l 35 literal: INT .\l"]
  68 -> "68R35" [style=solid]
 "68R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
  69 [label="State 69\n\l 36 literal: REAL .\l"]
  69 -> "69R36" [style=solid]
 "69R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  70 [label="State 70\n\l 37 literal: BOOLEAN .\l"]
  70 -> "70R37" [style=solid]
 "70R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  71 [label="State 71\n\l 38 literal: CHAR .\l"]
  71 -> "71R38" [style=solid]
 "71R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  72 [label="State 72\n\l 39 literal: STRING .\l"]
  72 -> "72R39" [style=solid]
 "72R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  73 [label="State 73\n\l 40 literal: NULO .\l"]
  73 -> "73R40" [style=solid]
 "73R40" [label="R40", fillcolor=3, shape=diamond, style=filled]
  74 [label="State 74\n\l 31 base: '(' . expression ')'\l"]
  74 -> 67 [style=solid label="ID"]
  74 -> 68 [style=solid label="INT"]
  74 -> 69 [style=solid label="REAL"]
  74 -> 70 [style=solid label="BOOLEAN"]
  74 -> 71 [style=solid label="CHAR"]
  74 -> 72 [style=solid label="STRING"]
  74 -> 73 [style=solid label="NULO"]
  74 -> 74 [style=solid label="'('"]
  74 -> 75 [style=dashed label="id"]
  74 -> 122 [style=dashed label="expression"]
  74 -> 77 [style=dashed label="term"]
  74 -> 78 [style=dashed label="factor"]
  74 -> 79 [style=dashed label="base"]
  74 -> 80 [style=dashed label="literal"]
  74 -> 81 [style=dashed label="id_value"]
  74 -> 82 [style=dashed label="function_call"]
  75 [label="State 75\n\l 41 id_value: id .\l"]
  75 -> "75R41" [style=solid]
 "75R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  76 [label="State 76\n\l 11 id_declaration: id '=' expression .\l 20 expression: expression . expression_operator expression\l"]
  76 -> 123 [style=solid label="'+'"]
  76 -> 124 [style=solid label="'-'"]
  76 -> 125 [style=dashed label="expression_operator"]
  76 -> "76R11" [style=solid]
 "76R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  77 [label="State 77\n\l 21 expression: term .\l 24 term: term . term_operator factor\l"]
  77 -> 126 [style=solid label="'*'"]
  77 -> 127 [style=solid label="'/'"]
  77 -> 128 [style=solid label="'%'"]
  77 -> 129 [style=dashed label="term_operator"]
  77 -> "77R21" [style=solid]
 "77R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  78 [label="State 78\n\l 25 term: factor .\l"]
  78 -> "78R25" [style=solid]
 "78R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  79 [label="State 79\n\l 29 factor: base . POWER factor\l 30       | base .\l"]
  79 -> 130 [style=solid label="POWER"]
  79 -> "79R30" [style=solid]
 "79R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  80 [label="State 80\n\l 32 base: literal .\l"]
  80 -> "80R32" [style=solid]
 "80R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  81 [label="State 81\n\l 33 base: id_value .\l 34     | id_value . double_sign\l"]
  81 -> 104 [style=solid label="DOUBLE_PLUS"]
  81 -> 105 [style=solid label="DOUBLE_MINUS"]
  81 -> 131 [style=dashed label="double_sign"]
  81 -> "81R33" [style=solid]
 "81R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
  82 [label="State 82\n\l 42 id_value: function_call .\l"]
  82 -> "82R42" [style=solid]
 "82R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  83 [label="State 83\n\l 57 signature: subprogram_type subprogram_id '(' . parameters ')'\l"]
  83 -> 132 [style=solid label="TYPE"]
  83 -> 133 [style=dashed label="parameters"]
  83 -> 134 [style=dashed label="parameter_list"]
  83 -> 135 [style=dashed label="parameter"]
  83 -> "83R63" [style=solid]
 "83R63" [label="R63", fillcolor=3, shape=diamond, style=filled]
  84 [label="State 84\n\l 58 signature: subprogram_main '(' ')' .\l"]
  84 -> "84R58" [style=solid]
 "84R58" [label="R58", fillcolor=3, shape=diamond, style=filled]
  85 [label="State 85\n\l106 print: PRINT '(' . print_content ')'\l"]
  85 -> 67 [style=solid label="ID"]
  85 -> 68 [style=solid label="INT"]
  85 -> 69 [style=solid label="REAL"]
  85 -> 70 [style=solid label="BOOLEAN"]
  85 -> 71 [style=solid label="CHAR"]
  85 -> 72 [style=solid label="STRING"]
  85 -> 73 [style=solid label="NULO"]
  85 -> 74 [style=solid label="'('"]
  85 -> 75 [style=dashed label="id"]
  85 -> 136 [style=dashed label="expression"]
  85 -> 77 [style=dashed label="term"]
  85 -> 78 [style=dashed label="factor"]
  85 -> 79 [style=dashed label="base"]
  85 -> 80 [style=dashed label="literal"]
  85 -> 81 [style=dashed label="id_value"]
  85 -> 82 [style=dashed label="function_call"]
  85 -> 137 [style=dashed label="print_content"]
  86 [label="State 86\n\l109 read: READ '(' . ID ')'\l110     | READ '(' . ')'\l"]
  86 -> 138 [style=solid label="ID"]
  86 -> 139 [style=solid label="')'"]
  87 [label="State 87\n\l132 for_structure: '(' . for_expression ')'\l"]
  87 -> 11 [style=solid label="ID"]
  87 -> 140 [style=solid label="TYPE"]
  87 -> 141 [style=dashed label="id"]
  87 -> 142 [style=dashed label="for_expression"]
  87 -> 143 [style=dashed label="for_assignment"]
  88 [label="State 88\n\l131 for: FOR for_structure . block\l"]
  88 -> 26 [style=solid label="'{'"]
  88 -> 144 [style=dashed label="block"]
  89 [label="State 89\n\l 94 comparison: '(' . compare ')'\l"]
  89 -> 11 [style=solid label="ID"]
  89 -> 91 [style=dashed label="id"]
  89 -> 145 [style=dashed label="compare"]
  90 [label="State 90\n\l 93 comparation: '!' . comparison\l"]
  90 -> 11 [style=solid label="ID"]
  90 -> 89 [style=solid label="'('"]
  90 -> 91 [style=dashed label="id"]
  90 -> 146 [style=dashed label="comparison"]
  90 -> 95 [style=dashed label="compare"]
  91 [label="State 91\n\l 96 compare: id . evaluation_operator expression\l"]
  91 -> 147 [style=solid label="EQUAL"]
  91 -> 148 [style=solid label="NOT_EQUAL"]
  91 -> 149 [style=solid label="EQ_GREATER"]
  91 -> 150 [style=solid label="EQ_SMALLER"]
  91 -> 151 [style=solid label="'>'"]
  91 -> 152 [style=solid label="'<'"]
  91 -> 153 [style=dashed label="evaluation_operator"]
  92 [label="State 92\n\l130 while: WHILE evaluation . block\l"]
  92 -> 26 [style=solid label="'{'"]
  92 -> 154 [style=dashed label="block"]
  93 [label="State 93\n\l 90 evaluation: comparation .\l 91           | comparation . logic_operator evaluation\l"]
  93 -> 155 [style=solid label="AND"]
  93 -> 156 [style=solid label="OR"]
  93 -> 157 [style=solid label="EOR"]
  93 -> 158 [style=dashed label="logic_operator"]
  93 -> "93R90" [style=solid]
 "93R90" [label="R90", fillcolor=3, shape=diamond, style=filled]
  94 [label="State 94\n\l 92 comparation: comparison .\l"]
  94 -> "94R92" [style=solid]
 "94R92" [label="R92", fillcolor=3, shape=diamond, style=filled]
  95 [label="State 95\n\l 95 comparison: compare .\l"]
  95 -> "95R95" [style=solid]
 "95R95" [label="R95", fillcolor=3, shape=diamond, style=filled]
  96 [label="State 96\n\l114 if: IF '(' . evaluation ')' block\l"]
  96 -> 11 [style=solid label="ID"]
  96 -> 89 [style=solid label="'('"]
  96 -> 90 [style=solid label="'!'"]
  96 -> 91 [style=dashed label="id"]
  96 -> 159 [style=dashed label="evaluation"]
  96 -> 93 [style=dashed label="comparation"]
  96 -> 94 [style=dashed label="comparison"]
  96 -> 95 [style=dashed label="compare"]
  97 [label="State 97\n\l121 switch: SWITCH '(' . id_value ')'\l"]
  97 -> 67 [style=solid label="ID"]
  97 -> 75 [style=dashed label="id"]
  97 -> 160 [style=dashed label="id_value"]
  97 -> 82 [style=dashed label="function_call"]
  98 [label="State 98\n\l 20 expression: expression . expression_operator expression\l136 return: RETURN expression .\l"]
  98 -> 123 [style=solid label="'+'"]
  98 -> 124 [style=solid label="'-'"]
  98 -> 125 [style=dashed label="expression_operator"]
  98 -> "98R136" [style=solid]
 "98R136" [label="R136", fillcolor=3, shape=diamond, style=filled]
  99 [label="State 99\n\l 71 body: declarations_list statement_list .\l"]
  99 -> "99R71" [style=solid]
 "99R71" [label="R71", fillcolor=3, shape=diamond, style=filled]
  100 [label="State 100\n\l 86 assignment_sign: PLUS_ASSIGN .\l"]
  100 -> "100R86" [style=solid]
 "100R86" [label="R86", fillcolor=3, shape=diamond, style=filled]
  101 [label="State 101\n\l 87 assignment_sign: MINUS_ASSIGN .\l"]
  101 -> "101R87" [style=solid]
 "101R87" [label="R87", fillcolor=3, shape=diamond, style=filled]
  102 [label="State 102\n\l 88 assignment_sign: DIV_ASSIGN .\l"]
  102 -> "102R88" [style=solid]
 "102R88" [label="R88", fillcolor=3, shape=diamond, style=filled]
  103 [label="State 103\n\l 89 assignment_sign: TIMES_ASSIGN .\l"]
  103 -> "103R89" [style=solid]
 "103R89" [label="R89", fillcolor=3, shape=diamond, style=filled]
  104 [label="State 104\n\l 51 double_sign: DOUBLE_PLUS .\l"]
  104 -> "104R51" [style=solid]
 "104R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  105 [label="State 105\n\l 52 double_sign: DOUBLE_MINUS .\l"]
  105 -> "105R52" [style=solid]
 "105R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  106 [label="State 106\n\l 85 assignment_sign: '=' .\l"]
  106 -> "106R85" [style=solid]
 "106R85" [label="R85", fillcolor=3, shape=diamond, style=filled]
  107 [label="State 107\n\l 84 assignment_operation: double_sign .\l"]
  107 -> "107R84" [style=solid]
 "107R84" [label="R84", fillcolor=3, shape=diamond, style=filled]
  108 [label="State 108\n\l 82 assignment: id assignment_operation .\l"]
  108 -> "108R82" [style=solid]
 "108R82" [label="R82", fillcolor=3, shape=diamond, style=filled]
  109 [label="State 109\n\l 83 assignment_operation: assignment_sign . expression\l"]
  109 -> 67 [style=solid label="ID"]
  109 -> 68 [style=solid label="INT"]
  109 -> 69 [style=solid label="REAL"]
  109 -> 70 [style=solid label="BOOLEAN"]
  109 -> 71 [style=solid label="CHAR"]
  109 -> 72 [style=solid label="STRING"]
  109 -> 73 [style=solid label="NULO"]
  109 -> 74 [style=solid label="'('"]
  109 -> 75 [style=dashed label="id"]
  109 -> 161 [style=dashed label="expression"]
  109 -> 77 [style=dashed label="term"]
  109 -> 78 [style=dashed label="factor"]
  109 -> 79 [style=dashed label="base"]
  109 -> 80 [style=dashed label="literal"]
  109 -> 81 [style=dashed label="id_value"]
  109 -> 82 [style=dashed label="function_call"]
  110 [label="State 110\n\l 68 block: '{' body '}' .\l"]
  110 -> "110R68" [style=solid]
 "110R68" [label="R68", fillcolor=3, shape=diamond, style=filled]
  111 [label="State 111\n\l 73 statement_list: statement ';' .\l 74               | statement ';' . statement_list\l"]
  111 -> 11 [style=solid label="ID"]
  111 -> 39 [style=solid label="PRINT"]
  111 -> 40 [style=solid label="READ"]
  111 -> 41 [style=solid label="FOR"]
  111 -> 42 [style=solid label="WHILE"]
  111 -> 43 [style=solid label="IF"]
  111 -> 44 [style=solid label="SWITCH"]
  111 -> 45 [style=solid label="BREAK"]
  111 -> 46 [style=solid label="RETURN"]
  111 -> 48 [style=dashed label="id"]
  111 -> 162 [style=dashed label="statement_list"]
  111 -> 51 [style=dashed label="statement"]
  111 -> 52 [style=dashed label="assignment"]
  111 -> 53 [style=dashed label="print"]
  111 -> 54 [style=dashed label="read"]
  111 -> 55 [style=dashed label="conditional"]
  111 -> 56 [style=dashed label="if_else"]
  111 -> 57 [style=dashed label="if"]
  111 -> 58 [style=dashed label="switch_case"]
  111 -> 59 [style=dashed label="switch"]
  111 -> 60 [style=dashed label="loop"]
  111 -> 61 [style=dashed label="while"]
  111 -> 62 [style=dashed label="for"]
  111 -> 63 [style=dashed label="return"]
  111 -> "111R73" [style=solid]
 "111R73" [label="R73", fillcolor=3, shape=diamond, style=filled]
  112 [label="State 112\n\l118 else_if: ELSE_IF . '(' evaluation ')' block\l"]
  112 -> 163 [style=solid label="'('"]
  113 [label="State 113\n\l119 else: ELSE . block\l"]
  113 -> 26 [style=solid label="'{'"]
  113 -> 164 [style=dashed label="block"]
  114 [label="State 114\n\l113 if_else: if else_section .\l"]
  114 -> "114R113" [style=solid]
 "114R113" [label="R113", fillcolor=3, shape=diamond, style=filled]
  115 [label="State 115\n\l116 else_section: else_if . else_section\l"]
  115 -> 112 [style=solid label="ELSE_IF"]
  115 -> 113 [style=solid label="ELSE"]
  115 -> 165 [style=dashed label="else_section"]
  115 -> 115 [style=dashed label="else_if"]
  115 -> 116 [style=dashed label="else"]
  115 -> "115R115" [style=solid]
 "115R115" [label="R115", fillcolor=3, shape=diamond, style=filled]
  116 [label="State 116\n\l117 else_section: else .\l"]
  116 -> "116R117" [style=solid]
 "116R117" [label="R117", fillcolor=3, shape=diamond, style=filled]
  117 [label="State 117\n\l120 switch_case: switch '{' . case_section default_section '}'\l"]
  117 -> 166 [style=solid label="CASE"]
  117 -> 167 [style=dashed label="case_section"]
  117 -> 168 [style=dashed label="case"]
  118 [label="State 118\n\l 18 dimensions_value: '[' INT ']' .\l 19                 | '[' INT ']' . dimensions_value\l"]
  118 -> 169 [style=solid label="'['"]
  118 -> 170 [style=dashed label="dimensions_value"]
  118 -> "118R18" [style=solid]
 "118R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  119 [label="State 119\n\l 16 dimensions_novalue: '[' . ']'\l 17                   | '[' . ']' dimensions_novalue\l"]
  119 -> 65 [style=solid label="']'"]
  120 [label="State 120\n\l 17 dimensions_novalue: '[' ']' dimensions_novalue .\l"]
  120 -> "120R17" [style=solid]
 "120R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  121 [label="State 121\n\l 43 function_call: ID '(' . arguments ')'\l"]
  121 -> 67 [style=solid label="ID"]
  121 -> 68 [style=solid label="INT"]
  121 -> 69 [style=solid label="REAL"]
  121 -> 70 [style=solid label="BOOLEAN"]
  121 -> 71 [style=solid label="CHAR"]
  121 -> 72 [style=solid label="STRING"]
  121 -> 73 [style=solid label="NULO"]
  121 -> 171 [style=dashed label="id_declaration"]
  121 -> 14 [style=dashed label="id"]
  121 -> 172 [style=dashed label="literal"]
  121 -> 173 [style=dashed label="function_call"]
  121 -> 174 [style=dashed label="arguments"]
  121 -> 175 [style=dashed label="arguments_list"]
  121 -> 176 [style=dashed label="argument"]
  121 -> "121R44" [style=solid]
 "121R44" [label="R44", fillcolor=3, shape=diamond, style=filled]
  122 [label="State 122\n\l 20 expression: expression . expression_operator expression\l 31 base: '(' expression . ')'\l"]
  122 -> 123 [style=solid label="'+'"]
  122 -> 124 [style=solid label="'-'"]
  122 -> 177 [style=solid label="')'"]
  122 -> 125 [style=dashed label="expression_operator"]
  123 [label="State 123\n\l 22 expression_operator: '+' .\l"]
  123 -> "123R22" [style=solid]
 "123R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  124 [label="State 124\n\l 23 expression_operator: '-' .\l"]
  124 -> "124R23" [style=solid]
 "124R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  125 [label="State 125\n\l 20 expression: expression expression_operator . expression\l"]
  125 -> 67 [style=solid label="ID"]
  125 -> 68 [style=solid label="INT"]
  125 -> 69 [style=solid label="REAL"]
  125 -> 70 [style=solid label="BOOLEAN"]
  125 -> 71 [style=solid label="CHAR"]
  125 -> 72 [style=solid label="STRING"]
  125 -> 73 [style=solid label="NULO"]
  125 -> 74 [style=solid label="'('"]
  125 -> 75 [style=dashed label="id"]
  125 -> 178 [style=dashed label="expression"]
  125 -> 77 [style=dashed label="term"]
  125 -> 78 [style=dashed label="factor"]
  125 -> 79 [style=dashed label="base"]
  125 -> 80 [style=dashed label="literal"]
  125 -> 81 [style=dashed label="id_value"]
  125 -> 82 [style=dashed label="function_call"]
  126 [label="State 126\n\l 26 term_operator: '*' .\l"]
  126 -> "126R26" [style=solid]
 "126R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  127 [label="State 127\n\l 27 term_operator: '/' .\l"]
  127 -> "127R27" [style=solid]
 "127R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  128 [label="State 128\n\l 28 term_operator: '%' .\l"]
  128 -> "128R28" [style=solid]
 "128R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  129 [label="State 129\n\l 24 term: term term_operator . factor\l"]
  129 -> 67 [style=solid label="ID"]
  129 -> 68 [style=solid label="INT"]
  129 -> 69 [style=solid label="REAL"]
  129 -> 70 [style=solid label="BOOLEAN"]
  129 -> 71 [style=solid label="CHAR"]
  129 -> 72 [style=solid label="STRING"]
  129 -> 73 [style=solid label="NULO"]
  129 -> 74 [style=solid label="'('"]
  129 -> 75 [style=dashed label="id"]
  129 -> 179 [style=dashed label="factor"]
  129 -> 79 [style=dashed label="base"]
  129 -> 80 [style=dashed label="literal"]
  129 -> 81 [style=dashed label="id_value"]
  129 -> 82 [style=dashed label="function_call"]
  130 [label="State 130\n\l 29 factor: base POWER . factor\l"]
  130 -> 67 [style=solid label="ID"]
  130 -> 68 [style=solid label="INT"]
  130 -> 69 [style=solid label="REAL"]
  130 -> 70 [style=solid label="BOOLEAN"]
  130 -> 71 [style=solid label="CHAR"]
  130 -> 72 [style=solid label="STRING"]
  130 -> 73 [style=solid label="NULO"]
  130 -> 74 [style=solid label="'('"]
  130 -> 75 [style=dashed label="id"]
  130 -> 180 [style=dashed label="factor"]
  130 -> 79 [style=dashed label="base"]
  130 -> 80 [style=dashed label="literal"]
  130 -> 81 [style=dashed label="id_value"]
  130 -> 82 [style=dashed label="function_call"]
  131 [label="State 131\n\l 34 base: id_value double_sign .\l"]
  131 -> "131R34" [style=solid]
 "131R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  132 [label="State 132\n\l 67 parameter: TYPE . id\l"]
  132 -> 11 [style=solid label="ID"]
  132 -> 181 [style=dashed label="id"]
  133 [label="State 133\n\l 57 signature: subprogram_type subprogram_id '(' parameters . ')'\l"]
  133 -> 182 [style=solid label="')'"]
  134 [label="State 134\n\l 64 parameters: parameter_list .\l"]
  134 -> "134R64" [style=solid]
 "134R64" [label="R64", fillcolor=3, shape=diamond, style=filled]
  135 [label="State 135\n\l 65 parameter_list: parameter .\l 66               | parameter . ',' parameter_list\l"]
  135 -> 183 [style=solid label="','"]
  135 -> "135R65" [style=solid]
 "135R65" [label="R65", fillcolor=3, shape=diamond, style=filled]
  136 [label="State 136\n\l 20 expression: expression . expression_operator expression\l107 print_content: expression .\l108              | expression . ',' print_content\l"]
  136 -> 184 [style=solid label="','"]
  136 -> 123 [style=solid label="'+'"]
  136 -> 124 [style=solid label="'-'"]
  136 -> 125 [style=dashed label="expression_operator"]
  136 -> "136R107" [style=solid]
 "136R107" [label="R107", fillcolor=3, shape=diamond, style=filled]
  137 [label="State 137\n\l106 print: PRINT '(' print_content . ')'\l"]
  137 -> 185 [style=solid label="')'"]
  138 [label="State 138\n\l109 read: READ '(' ID . ')'\l"]
  138 -> 186 [style=solid label="')'"]
  139 [label="State 139\n\l110 read: READ '(' ')' .\l"]
  139 -> "139R110" [style=solid]
 "139R110" [label="R110", fillcolor=3, shape=diamond, style=filled]
  140 [label="State 140\n\l135 for_assignment: TYPE . id '=' expression\l"]
  140 -> 11 [style=solid label="ID"]
  140 -> 187 [style=dashed label="id"]
  141 [label="State 141\n\l134 for_assignment: id . '=' expression\l"]
  141 -> 188 [style=solid label="'='"]
  142 [label="State 142\n\l132 for_structure: '(' for_expression . ')'\l"]
  142 -> 189 [style=solid label="')'"]
  143 [label="State 143\n\l133 for_expression: for_assignment . ';' evaluation ';' assignment\l"]
  143 -> 190 [style=solid label="';'"]
  144 [label="State 144\n\l131 for: FOR for_structure block .\l"]
  144 -> "144R131" [style=solid]
 "144R131" [label="R131", fillcolor=3, shape=diamond, style=filled]
  145 [label="State 145\n\l 94 comparison: '(' compare . ')'\l"]
  145 -> 191 [style=solid label="')'"]
  146 [label="State 146\n\l 93 comparation: '!' comparison .\l"]
  146 -> "146R93" [style=solid]
 "146R93" [label="R93", fillcolor=3, shape=diamond, style=filled]
  147 [label="State 147\n\l 97 evaluation_operator: EQUAL .\l"]
  147 -> "147R97" [style=solid]
 "147R97" [label="R97", fillcolor=3, shape=diamond, style=filled]
  148 [label="State 148\n\l 98 evaluation_operator: NOT_EQUAL .\l"]
  148 -> "148R98" [style=solid]
 "148R98" [label="R98", fillcolor=3, shape=diamond, style=filled]
  149 [label="State 149\n\l101 evaluation_operator: EQ_GREATER .\l"]
  149 -> "149R101" [style=solid]
 "149R101" [label="R101", fillcolor=3, shape=diamond, style=filled]
  150 [label="State 150\n\l102 evaluation_operator: EQ_SMALLER .\l"]
  150 -> "150R102" [style=solid]
 "150R102" [label="R102", fillcolor=3, shape=diamond, style=filled]
  151 [label="State 151\n\l 99 evaluation_operator: '>' .\l"]
  151 -> "151R99" [style=solid]
 "151R99" [label="R99", fillcolor=3, shape=diamond, style=filled]
  152 [label="State 152\n\l100 evaluation_operator: '<' .\l"]
  152 -> "152R100" [style=solid]
 "152R100" [label="R100", fillcolor=3, shape=diamond, style=filled]
  153 [label="State 153\n\l 96 compare: id evaluation_operator . expression\l"]
  153 -> 67 [style=solid label="ID"]
  153 -> 68 [style=solid label="INT"]
  153 -> 69 [style=solid label="REAL"]
  153 -> 70 [style=solid label="BOOLEAN"]
  153 -> 71 [style=solid label="CHAR"]
  153 -> 72 [style=solid label="STRING"]
  153 -> 73 [style=solid label="NULO"]
  153 -> 74 [style=solid label="'('"]
  153 -> 75 [style=dashed label="id"]
  153 -> 192 [style=dashed label="expression"]
  153 -> 77 [style=dashed label="term"]
  153 -> 78 [style=dashed label="factor"]
  153 -> 79 [style=dashed label="base"]
  153 -> 80 [style=dashed label="literal"]
  153 -> 81 [style=dashed label="id_value"]
  153 -> 82 [style=dashed label="function_call"]
  154 [label="State 154\n\l130 while: WHILE evaluation block .\l"]
  154 -> "154R130" [style=solid]
 "154R130" [label="R130", fillcolor=3, shape=diamond, style=filled]
  155 [label="State 155\n\l103 logic_operator: AND .\l"]
  155 -> "155R103" [style=solid]
 "155R103" [label="R103", fillcolor=3, shape=diamond, style=filled]
  156 [label="State 156\n\l104 logic_operator: OR .\l"]
  156 -> "156R104" [style=solid]
 "156R104" [label="R104", fillcolor=3, shape=diamond, style=filled]
  157 [label="State 157\n\l105 logic_operator: EOR .\l"]
  157 -> "157R105" [style=solid]
 "157R105" [label="R105", fillcolor=3, shape=diamond, style=filled]
  158 [label="State 158\n\l 91 evaluation: comparation logic_operator . evaluation\l"]
  158 -> 11 [style=solid label="ID"]
  158 -> 89 [style=solid label="'('"]
  158 -> 90 [style=solid label="'!'"]
  158 -> 91 [style=dashed label="id"]
  158 -> 193 [style=dashed label="evaluation"]
  158 -> 93 [style=dashed label="comparation"]
  158 -> 94 [style=dashed label="comparison"]
  158 -> 95 [style=dashed label="compare"]
  159 [label="State 159\n\l114 if: IF '(' evaluation . ')' block\l"]
  159 -> 194 [style=solid label="')'"]
  160 [label="State 160\n\l121 switch: SWITCH '(' id_value . ')'\l"]
  160 -> 195 [style=solid label="')'"]
  161 [label="State 161\n\l 20 expression: expression . expression_operator expression\l 83 assignment_operation: assignment_sign expression .\l"]
  161 -> 123 [style=solid label="'+'"]
  161 -> 124 [style=solid label="'-'"]
  161 -> 125 [style=dashed label="expression_operator"]
  161 -> "161R83" [style=solid]
 "161R83" [label="R83", fillcolor=3, shape=diamond, style=filled]
  162 [label="State 162\n\l 74 statement_list: statement ';' statement_list .\l"]
  162 -> "162R74" [style=solid]
 "162R74" [label="R74", fillcolor=3, shape=diamond, style=filled]
  163 [label="State 163\n\l118 else_if: ELSE_IF '(' . evaluation ')' block\l"]
  163 -> 11 [style=solid label="ID"]
  163 -> 89 [style=solid label="'('"]
  163 -> 90 [style=solid label="'!'"]
  163 -> 91 [style=dashed label="id"]
  163 -> 196 [style=dashed label="evaluation"]
  163 -> 93 [style=dashed label="comparation"]
  163 -> 94 [style=dashed label="comparison"]
  163 -> 95 [style=dashed label="compare"]
  164 [label="State 164\n\l119 else: ELSE block .\l"]
  164 -> "164R119" [style=solid]
 "164R119" [label="R119", fillcolor=3, shape=diamond, style=filled]
  165 [label="State 165\n\l116 else_section: else_if else_section .\l"]
  165 -> "165R116" [style=solid]
 "165R116" [label="R116", fillcolor=3, shape=diamond, style=filled]
  166 [label="State 166\n\l124 case: CASE . literal ':' body\l"]
  166 -> 68 [style=solid label="INT"]
  166 -> 69 [style=solid label="REAL"]
  166 -> 70 [style=solid label="BOOLEAN"]
  166 -> 71 [style=solid label="CHAR"]
  166 -> 72 [style=solid label="STRING"]
  166 -> 73 [style=solid label="NULO"]
  166 -> 197 [style=dashed label="literal"]
  167 [label="State 167\n\l120 switch_case: switch '{' case_section . default_section '}'\l"]
  167 -> 198 [style=solid label="DEFAULT"]
  167 -> 199 [style=dashed label="default_section"]
  167 -> 200 [style=dashed label="default"]
  167 -> "167R125" [style=solid]
 "167R125" [label="R125", fillcolor=3, shape=diamond, style=filled]
  168 [label="State 168\n\l122 case_section: case .\l123             | case . case_section\l"]
  168 -> 166 [style=solid label="CASE"]
  168 -> 201 [style=dashed label="case_section"]
  168 -> 168 [style=dashed label="case"]
  168 -> "168R122" [style=solid]
 "168R122" [label="R122", fillcolor=3, shape=diamond, style=filled]
  169 [label="State 169\n\l 18 dimensions_value: '[' . INT ']'\l 19                 | '[' . INT ']' dimensions_value\l"]
  169 -> 64 [style=solid label="INT"]
  170 [label="State 170\n\l 19 dimensions_value: '[' INT ']' dimensions_value .\l"]
  170 -> "170R19" [style=solid]
 "170R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  171 [label="State 171\n\l 48 argument: id_declaration .\l"]
  171 -> "171R48" [style=solid]
 "171R48" [label="R48", fillcolor=3, shape=diamond, style=filled]
  172 [label="State 172\n\l 49 argument: literal .\l"]
  172 -> "172R49" [style=solid]
 "172R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  173 [label="State 173\n\l 50 argument: function_call .\l"]
  173 -> "173R50" [style=solid]
 "173R50" [label="R50", fillcolor=3, shape=diamond, style=filled]
  174 [label="State 174\n\l 43 function_call: ID '(' arguments . ')'\l"]
  174 -> 202 [style=solid label="')'"]
  175 [label="State 175\n\l 45 arguments: arguments_list .\l"]
  175 -> "175R45" [style=solid]
 "175R45" [label="R45", fillcolor=3, shape=diamond, style=filled]
  176 [label="State 176\n\l 46 arguments_list: argument .\l 47               | argument . ',' arguments_list\l"]
  176 -> 203 [style=solid label="','"]
  176 -> "176R46" [style=solid]
 "176R46" [label="R46", fillcolor=3, shape=diamond, style=filled]
  177 [label="State 177\n\l 31 base: '(' expression ')' .\l"]
  177 -> "177R31" [style=solid]
 "177R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  178 [label="State 178\n\l 20 expression: expression . expression_operator expression\l 20           | expression expression_operator expression .\l"]
  178 -> 123 [style=solid label="'+'"]
  178 -> 124 [style=solid label="'-'"]
  178 -> 125 [style=dashed label="expression_operator"]
  178 -> "178R20d" [label="['+', '-']", style=solid]
 "178R20d" [label="R20", fillcolor=5, shape=diamond, style=filled]
  178 -> "178R20" [style=solid]
 "178R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  179 [label="State 179\n\l 24 term: term term_operator factor .\l"]
  179 -> "179R24" [style=solid]
 "179R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  180 [label="State 180\n\l 29 factor: base POWER factor .\l"]
  180 -> "180R29" [style=solid]
 "180R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  181 [label="State 181\n\l 67 parameter: TYPE id .\l"]
  181 -> "181R67" [style=solid]
 "181R67" [label="R67", fillcolor=3, shape=diamond, style=filled]
  182 [label="State 182\n\l 57 signature: subprogram_type subprogram_id '(' parameters ')' .\l"]
  182 -> "182R57" [style=solid]
 "182R57" [label="R57", fillcolor=3, shape=diamond, style=filled]
  183 [label="State 183\n\l 66 parameter_list: parameter ',' . parameter_list\l"]
  183 -> 132 [style=solid label="TYPE"]
  183 -> 204 [style=dashed label="parameter_list"]
  183 -> 135 [style=dashed label="parameter"]
  184 [label="State 184\n\l108 print_content: expression ',' . print_content\l"]
  184 -> 67 [style=solid label="ID"]
  184 -> 68 [style=solid label="INT"]
  184 -> 69 [style=solid label="REAL"]
  184 -> 70 [style=solid label="BOOLEAN"]
  184 -> 71 [style=solid label="CHAR"]
  184 -> 72 [style=solid label="STRING"]
  184 -> 73 [style=solid label="NULO"]
  184 -> 74 [style=solid label="'('"]
  184 -> 75 [style=dashed label="id"]
  184 -> 136 [style=dashed label="expression"]
  184 -> 77 [style=dashed label="term"]
  184 -> 78 [style=dashed label="factor"]
  184 -> 79 [style=dashed label="base"]
  184 -> 80 [style=dashed label="literal"]
  184 -> 81 [style=dashed label="id_value"]
  184 -> 82 [style=dashed label="function_call"]
  184 -> 205 [style=dashed label="print_content"]
  185 [label="State 185\n\l106 print: PRINT '(' print_content ')' .\l"]
  185 -> "185R106" [style=solid]
 "185R106" [label="R106", fillcolor=3, shape=diamond, style=filled]
  186 [label="State 186\n\l109 read: READ '(' ID ')' .\l"]
  186 -> "186R109" [style=solid]
 "186R109" [label="R109", fillcolor=3, shape=diamond, style=filled]
  187 [label="State 187\n\l135 for_assignment: TYPE id . '=' expression\l"]
  187 -> 206 [style=solid label="'='"]
  188 [label="State 188\n\l134 for_assignment: id '=' . expression\l"]
  188 -> 67 [style=solid label="ID"]
  188 -> 68 [style=solid label="INT"]
  188 -> 69 [style=solid label="REAL"]
  188 -> 70 [style=solid label="BOOLEAN"]
  188 -> 71 [style=solid label="CHAR"]
  188 -> 72 [style=solid label="STRING"]
  188 -> 73 [style=solid label="NULO"]
  188 -> 74 [style=solid label="'('"]
  188 -> 75 [style=dashed label="id"]
  188 -> 207 [style=dashed label="expression"]
  188 -> 77 [style=dashed label="term"]
  188 -> 78 [style=dashed label="factor"]
  188 -> 79 [style=dashed label="base"]
  188 -> 80 [style=dashed label="literal"]
  188 -> 81 [style=dashed label="id_value"]
  188 -> 82 [style=dashed label="function_call"]
  189 [label="State 189\n\l132 for_structure: '(' for_expression ')' .\l"]
  189 -> "189R132" [style=solid]
 "189R132" [label="R132", fillcolor=3, shape=diamond, style=filled]
  190 [label="State 190\n\l133 for_expression: for_assignment ';' . evaluation ';' assignment\l"]
  190 -> 11 [style=solid label="ID"]
  190 -> 89 [style=solid label="'('"]
  190 -> 90 [style=solid label="'!'"]
  190 -> 91 [style=dashed label="id"]
  190 -> 208 [style=dashed label="evaluation"]
  190 -> 93 [style=dashed label="comparation"]
  190 -> 94 [style=dashed label="comparison"]
  190 -> 95 [style=dashed label="compare"]
  191 [label="State 191\n\l 94 comparison: '(' compare ')' .\l"]
  191 -> "191R94" [style=solid]
 "191R94" [label="R94", fillcolor=3, shape=diamond, style=filled]
  192 [label="State 192\n\l 20 expression: expression . expression_operator expression\l 96 compare: id evaluation_operator expression .\l"]
  192 -> 123 [style=solid label="'+'"]
  192 -> 124 [style=solid label="'-'"]
  192 -> 125 [style=dashed label="expression_operator"]
  192 -> "192R96" [style=solid]
 "192R96" [label="R96", fillcolor=3, shape=diamond, style=filled]
  193 [label="State 193\n\l 91 evaluation: comparation logic_operator evaluation .\l"]
  193 -> "193R91" [style=solid]
 "193R91" [label="R91", fillcolor=3, shape=diamond, style=filled]
  194 [label="State 194\n\l114 if: IF '(' evaluation ')' . block\l"]
  194 -> 26 [style=solid label="'{'"]
  194 -> 209 [style=dashed label="block"]
  195 [label="State 195\n\l121 switch: SWITCH '(' id_value ')' .\l"]
  195 -> "195R121" [style=solid]
 "195R121" [label="R121", fillcolor=3, shape=diamond, style=filled]
  196 [label="State 196\n\l118 else_if: ELSE_IF '(' evaluation . ')' block\l"]
  196 -> 210 [style=solid label="')'"]
  197 [label="State 197\n\l124 case: CASE literal . ':' body\l"]
  197 -> 211 [style=solid label="':'"]
  198 [label="State 198\n\l127 default: DEFAULT . ':' body\l"]
  198 -> 212 [style=solid label="':'"]
  199 [label="State 199\n\l120 switch_case: switch '{' case_section default_section . '}'\l"]
  199 -> 213 [style=solid label="'}'"]
  200 [label="State 200\n\l126 default_section: default .\l"]
  200 -> "200R126" [style=solid]
 "200R126" [label="R126", fillcolor=3, shape=diamond, style=filled]
  201 [label="State 201\n\l123 case_section: case case_section .\l"]
  201 -> "201R123" [style=solid]
 "201R123" [label="R123", fillcolor=3, shape=diamond, style=filled]
  202 [label="State 202\n\l 43 function_call: ID '(' arguments ')' .\l"]
  202 -> "202R43" [style=solid]
 "202R43" [label="R43", fillcolor=3, shape=diamond, style=filled]
  203 [label="State 203\n\l 47 arguments_list: argument ',' . arguments_list\l"]
  203 -> 67 [style=solid label="ID"]
  203 -> 68 [style=solid label="INT"]
  203 -> 69 [style=solid label="REAL"]
  203 -> 70 [style=solid label="BOOLEAN"]
  203 -> 71 [style=solid label="CHAR"]
  203 -> 72 [style=solid label="STRING"]
  203 -> 73 [style=solid label="NULO"]
  203 -> 171 [style=dashed label="id_declaration"]
  203 -> 14 [style=dashed label="id"]
  203 -> 172 [style=dashed label="literal"]
  203 -> 173 [style=dashed label="function_call"]
  203 -> 214 [style=dashed label="arguments_list"]
  203 -> 176 [style=dashed label="argument"]
  204 [label="State 204\n\l 66 parameter_list: parameter ',' parameter_list .\l"]
  204 -> "204R66" [style=solid]
 "204R66" [label="R66", fillcolor=3, shape=diamond, style=filled]
  205 [label="State 205\n\l108 print_content: expression ',' print_content .\l"]
  205 -> "205R108" [style=solid]
 "205R108" [label="R108", fillcolor=3, shape=diamond, style=filled]
  206 [label="State 206\n\l135 for_assignment: TYPE id '=' . expression\l"]
  206 -> 67 [style=solid label="ID"]
  206 -> 68 [style=solid label="INT"]
  206 -> 69 [style=solid label="REAL"]
  206 -> 70 [style=solid label="BOOLEAN"]
  206 -> 71 [style=solid label="CHAR"]
  206 -> 72 [style=solid label="STRING"]
  206 -> 73 [style=solid label="NULO"]
  206 -> 74 [style=solid label="'('"]
  206 -> 75 [style=dashed label="id"]
  206 -> 215 [style=dashed label="expression"]
  206 -> 77 [style=dashed label="term"]
  206 -> 78 [style=dashed label="factor"]
  206 -> 79 [style=dashed label="base"]
  206 -> 80 [style=dashed label="literal"]
  206 -> 81 [style=dashed label="id_value"]
  206 -> 82 [style=dashed label="function_call"]
  207 [label="State 207\n\l 20 expression: expression . expression_operator expression\l134 for_assignment: id '=' expression .\l"]
  207 -> 123 [style=solid label="'+'"]
  207 -> 124 [style=solid label="'-'"]
  207 -> 125 [style=dashed label="expression_operator"]
  207 -> "207R134" [style=solid]
 "207R134" [label="R134", fillcolor=3, shape=diamond, style=filled]
  208 [label="State 208\n\l133 for_expression: for_assignment ';' evaluation . ';' assignment\l"]
  208 -> 216 [style=solid label="';'"]
  209 [label="State 209\n\l114 if: IF '(' evaluation ')' block .\l"]
  209 -> "209R114" [style=solid]
 "209R114" [label="R114", fillcolor=3, shape=diamond, style=filled]
  210 [label="State 210\n\l118 else_if: ELSE_IF '(' evaluation ')' . block\l"]
  210 -> 26 [style=solid label="'{'"]
  210 -> 217 [style=dashed label="block"]
  211 [label="State 211\n\l124 case: CASE literal ':' . body\l"]
  211 -> 11 [style=solid label="ID"]
  211 -> 1 [style=solid label="TYPE"]
  211 -> 39 [style=solid label="PRINT"]
  211 -> 40 [style=solid label="READ"]
  211 -> 2 [style=solid label="CONSTANT"]
  211 -> 41 [style=solid label="FOR"]
  211 -> 42 [style=solid label="WHILE"]
  211 -> 43 [style=solid label="IF"]
  211 -> 44 [style=solid label="SWITCH"]
  211 -> 45 [style=solid label="BREAK"]
  211 -> 46 [style=solid label="RETURN"]
  211 -> 47 [style=dashed label="declarations_list"]
  211 -> 7 [style=dashed label="declaration"]
  211 -> 48 [style=dashed label="id"]
  211 -> 218 [style=dashed label="body"]
  211 -> 50 [style=dashed label="statement_list"]
  211 -> 51 [style=dashed label="statement"]
  211 -> 52 [style=dashed label="assignment"]
  211 -> 53 [style=dashed label="print"]
  211 -> 54 [style=dashed label="read"]
  211 -> 55 [style=dashed label="conditional"]
  211 -> 56 [style=dashed label="if_else"]
  211 -> 57 [style=dashed label="if"]
  211 -> 58 [style=dashed label="switch_case"]
  211 -> 59 [style=dashed label="switch"]
  211 -> 60 [style=dashed label="loop"]
  211 -> 61 [style=dashed label="while"]
  211 -> 62 [style=dashed label="for"]
  211 -> 63 [style=dashed label="return"]
  211 -> "211R69" [style=solid]
 "211R69" [label="R69", fillcolor=3, shape=diamond, style=filled]
  212 [label="State 212\n\l127 default: DEFAULT ':' . body\l"]
  212 -> 11 [style=solid label="ID"]
  212 -> 1 [style=solid label="TYPE"]
  212 -> 39 [style=solid label="PRINT"]
  212 -> 40 [style=solid label="READ"]
  212 -> 2 [style=solid label="CONSTANT"]
  212 -> 41 [style=solid label="FOR"]
  212 -> 42 [style=solid label="WHILE"]
  212 -> 43 [style=solid label="IF"]
  212 -> 44 [style=solid label="SWITCH"]
  212 -> 45 [style=solid label="BREAK"]
  212 -> 46 [style=solid label="RETURN"]
  212 -> 47 [style=dashed label="declarations_list"]
  212 -> 7 [style=dashed label="declaration"]
  212 -> 48 [style=dashed label="id"]
  212 -> 219 [style=dashed label="body"]
  212 -> 50 [style=dashed label="statement_list"]
  212 -> 51 [style=dashed label="statement"]
  212 -> 52 [style=dashed label="assignment"]
  212 -> 53 [style=dashed label="print"]
  212 -> 54 [style=dashed label="read"]
  212 -> 55 [style=dashed label="conditional"]
  212 -> 56 [style=dashed label="if_else"]
  212 -> 57 [style=dashed label="if"]
  212 -> 58 [style=dashed label="switch_case"]
  212 -> 59 [style=dashed label="switch"]
  212 -> 60 [style=dashed label="loop"]
  212 -> 61 [style=dashed label="while"]
  212 -> 62 [style=dashed label="for"]
  212 -> 63 [style=dashed label="return"]
  212 -> "212R69" [style=solid]
 "212R69" [label="R69", fillcolor=3, shape=diamond, style=filled]
  213 [label="State 213\n\l120 switch_case: switch '{' case_section default_section '}' .\l"]
  213 -> "213R120" [style=solid]
 "213R120" [label="R120", fillcolor=3, shape=diamond, style=filled]
  214 [label="State 214\n\l 47 arguments_list: argument ',' arguments_list .\l"]
  214 -> "214R47" [style=solid]
 "214R47" [label="R47", fillcolor=3, shape=diamond, style=filled]
  215 [label="State 215\n\l 20 expression: expression . expression_operator expression\l135 for_assignment: TYPE id '=' expression .\l"]
  215 -> 123 [style=solid label="'+'"]
  215 -> 124 [style=solid label="'-'"]
  215 -> 125 [style=dashed label="expression_operator"]
  215 -> "215R135" [style=solid]
 "215R135" [label="R135", fillcolor=3, shape=diamond, style=filled]
  216 [label="State 216\n\l133 for_expression: for_assignment ';' evaluation ';' . assignment\l"]
  216 -> 11 [style=solid label="ID"]
  216 -> 48 [style=dashed label="id"]
  216 -> 220 [style=dashed label="assignment"]
  217 [label="State 217\n\l118 else_if: ELSE_IF '(' evaluation ')' block .\l"]
  217 -> "217R118" [style=solid]
 "217R118" [label="R118", fillcolor=3, shape=diamond, style=filled]
  218 [label="State 218\n\l124 case: CASE literal ':' body .\l"]
  218 -> "218R124" [style=solid]
 "218R124" [label="R124", fillcolor=3, shape=diamond, style=filled]
  219 [label="State 219\n\l127 default: DEFAULT ':' body .\l"]
  219 -> "219R127" [style=solid]
 "219R127" [label="R127", fillcolor=3, shape=diamond, style=filled]
  220 [label="State 220\n\l133 for_expression: for_assignment ';' evaluation ';' assignment .\l"]
  220 -> "220R133" [style=solid]
 "220R133" [label="R133", fillcolor=3, shape=diamond, style=filled]
}
