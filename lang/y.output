Terminals unused in grammar

    NULO


Grammar

    0 $accept: program $end

    1 program: declarations_section subprograms_section

    2 declarations_section: ε
    3                     | declarations_list

    4 declarations_list: declaration ';'
    5                  | declaration ';' declarations_list

    6 declaration: TYPE id_list
    7            | CONSTANT TYPE id_list

    8 id_list: id_declaration
    9        | id_declaration ',' id_list

   10 id_declaration: id
   11               | id '=' expression

   12 id: ID dimensions

   13 dimensions: ε
   14           | dimensions_novalue
   15           | dimensions_value

   16 dimensions_novalue: '[' ']'
   17                   | '[' ']' dimensions_novalue

   18 dimensions_value: '[' INT ']'
   19                 | '[' INT ']' dimensions_value

   20 expression: expression expression_operator term
   21           | term

   22 expression_operator: '+'
   23                    | '-'

   24 term: term term_operator factor
   25     | factor

   26 term_operator: '*'
   27              | '/'
   28              | '%'

   29 factor: base POWER factor
   30       | base

   31 base: '(' expression ')'
   32     | literal
   33     | id_value
   34     | id_value double_sign

   35 literal: INT
   36        | REAL
   37        | BOOLEAN
   38        | CHAR
   39        | STRING

   40 id_value: id
   41         | function_call

   42 function_call: ID '(' arguments ')'

   43 arguments: ε
   44          | arguments_list

   45 arguments_list: argument
   46               | argument ',' arguments_list

   47 argument: id_declaration
   48         | literal
   49         | function_call

   50 double_sign: DOUBLE_PLUS
   51            | DOUBLE_MINUS

   52 subprograms_section: subprogram
   53                    | subprogram subprograms_section

   54 subprogram: header block

   55 header: FUNCTION signature

   56 signature: subprogram_type subprogram_id '(' parameters ')'

   57 subprogram_type: TYPE
   58                | VOID

   59 subprogram_id: ID
   60              | MAIN

   61 parameters: ε
   62           | parameter_list

   63 parameter_list: parameter
   64               | parameter ',' parameter_list

   65 parameter: TYPE id

   66 block: '{' body '}'

   67 body: ε
   68     | declarations_list
   69     | declarations_list statement_list
   70     | statement_list

   71 statement_list: statement ';'
   72               | statement ';' statement_list

   73 statement: assignment
   74          | conditional
   75          | loop
   76          | return
   77          | BREAK

   78 assignment: id assignment_operation

   79 assignment_operation: assignment_sign expression
   80                     | double_sign

   81 assignment_sign: '='
   82                | PLUS_ASSIGN
   83                | MINUS_ASSIGN
   84                | DIV_ASSIGN
   85                | TIMES_ASSIGN

   86 evaluation: comparation
   87           | comparation logic_operator evaluation

   88 comparation: comparison
   89            | '!' comparison

   90 comparison: '(' compare ')'
   91           | compare

   92 compare: id evaluation_operator expression

   93 evaluation_operator: EQUAL
   94                    | NOT_EQUAL
   95                    | '>'
   96                    | '<'
   97                    | EQ_GREATER
   98                    | EQ_SMALLER

   99 logic_operator: AND
  100               | OR
  101               | EOR

  102 conditional: if_else
  103            | switch_case

  104 if_else: if else_section

  105 if: IF '(' evaluation ')' block

  106 else_section: ε
  107             | else_if else_section
  108             | else

  109 else_if: ELSE_IF '(' evaluation ')' block

  110 else: ELSE block

  111 switch_case: switch '{' case_section default_section '}'

  112 switch: SWITCH '(' id_value ')'

  113 case_section: case
  114             | case case_section

  115 case: CASE literal ':' body

  116 default_section: ε
  117                | default

  118 default: DEFAULT ':' body

  119 loop: while
  120     | for

  121 while: WHILE evaluation block

  122 for: FOR for_structure block

  123 for_structure: '(' for_expression ')'

  124 for_expression: for_assignment ';' evaluation ';' assignment

  125 for_assignment: id '=' expression
  126               | TYPE id '=' expression

  127 return: RETURN expression


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 89
    '%' (37) 28
    '(' (40) 31 42 56 90 105 109 112 123
    ')' (41) 31 42 56 90 105 109 112 123
    '*' (42) 26
    '+' (43) 22
    ',' (44) 9 46 64
    '-' (45) 23
    '/' (47) 27
    ':' (58) 115 118
    ';' (59) 4 5 71 72 124
    '<' (60) 96
    '=' (61) 11 81 125 126
    '>' (62) 95
    '[' (91) 16 17 18 19
    ']' (93) 16 17 18 19
    '{' (123) 66 111
    '}' (125) 66 111
    error (256)
    ID <sValue> (258) 12 42 59
    INT <sValue> (259) 18 19 35
    REAL <sValue> (260) 36
    BOOLEAN <sValue> (261) 37
    CHAR <sValue> (262) 38
    STRING <sValue> (263) 39
    VOID <sValue> (264) 58
    TYPE <sValue> (265) 6 7 57 65 126
    NULO (266)
    CONSTANT (267) 7
    MAIN (268) 60
    FUNCTION (269) 55
    FOR (270) 122
    WHILE (271) 121
    IF (272) 105
    ELSE_IF (273) 109
    ELSE (274) 110
    SWITCH (275) 112
    CASE (276) 115
    DEFAULT (277) 118
    BREAK (278) 77
    RETURN (279) 127
    PLUS_ASSIGN (280) 82
    MINUS_ASSIGN (281) 83
    DIV_ASSIGN (282) 84
    TIMES_ASSIGN (283) 85
    DOUBLE_PLUS (284) 50
    DOUBLE_MINUS (285) 51
    POWER (286) 29
    AND (287) 99
    OR (288) 100
    EOR (289) 101
    EQUAL (290) 93
    NOT_EQUAL (291) 94
    EQ_GREATER (292) 97
    EQ_SMALLER (293) 98


Nonterminals, with rules where they appear

    $accept (57)
        on left: 0
    program (58)
        on left: 1
        on right: 0
    declarations_section <rec> (59)
        on left: 2 3
        on right: 1
    declarations_list <rec> (60)
        on left: 4 5
        on right: 3 5 68 69
    declaration <rec> (61)
        on left: 6 7
        on right: 4 5
    id_list <rec> (62)
        on left: 8 9
        on right: 6 7 9
    id_declaration <rec> (63)
        on left: 10 11
        on right: 8 9 47
    id <rec> (64)
        on left: 12
        on right: 10 11 40 65 78 92 125 126
    dimensions <rec> (65)
        on left: 13 14 15
        on right: 12
    dimensions_novalue <rec> (66)
        on left: 16 17
        on right: 14 17
    dimensions_value <rec> (67)
        on left: 18 19
        on right: 15 19
    expression <rec> (68)
        on left: 20 21
        on right: 11 20 31 79 92 125 126 127
    expression_operator <rec> (69)
        on left: 22 23
        on right: 20
    term <rec> (70)
        on left: 24 25
        on right: 20 21 24
    term_operator <rec> (71)
        on left: 26 27 28
        on right: 24
    factor <rec> (72)
        on left: 29 30
        on right: 24 25 29
    base <rec> (73)
        on left: 31 32 33 34
        on right: 29 30
    literal <rec> (74)
        on left: 35 36 37 38 39
        on right: 32 48 115
    id_value <rec> (75)
        on left: 40 41
        on right: 33 34 112
    function_call <rec> (76)
        on left: 42
        on right: 41 49
    arguments <rec> (77)
        on left: 43 44
        on right: 42
    arguments_list <rec> (78)
        on left: 45 46
        on right: 44 46
    argument <rec> (79)
        on left: 47 48 49
        on right: 45 46
    double_sign <rec> (80)
        on left: 50 51
        on right: 34 80
    subprograms_section <rec> (81)
        on left: 52 53
        on right: 1 53
    subprogram <rec> (82)
        on left: 54
        on right: 52 53
    header <rec> (83)
        on left: 55
        on right: 54
    signature <rec> (84)
        on left: 56
        on right: 55
    subprogram_type <rec> (85)
        on left: 57 58
        on right: 56
    subprogram_id <rec> (86)
        on left: 59 60
        on right: 56
    parameters <rec> (87)
        on left: 61 62
        on right: 56
    parameter_list <rec> (88)
        on left: 63 64
        on right: 62 64
    parameter <rec> (89)
        on left: 65
        on right: 63 64
    block <rec> (90)
        on left: 66
        on right: 54 105 109 110 121 122
    body <rec> (91)
        on left: 67 68 69 70
        on right: 66 115 118
    statement_list <rec> (92)
        on left: 71 72
        on right: 69 70 72
    statement <rec> (93)
        on left: 73 74 75 76 77
        on right: 71 72
    assignment <rec> (94)
        on left: 78
        on right: 73 124
    assignment_operation <rec> (95)
        on left: 79 80
        on right: 78
    assignment_sign <rec> (96)
        on left: 81 82 83 84 85
        on right: 79
    evaluation <rec> (97)
        on left: 86 87
        on right: 87 105 109 121 124
    comparation <rec> (98)
        on left: 88 89
        on right: 86 87
    comparison <rec> (99)
        on left: 90 91
        on right: 88 89
    compare <rec> (100)
        on left: 92
        on right: 90 91
    evaluation_operator <rec> (101)
        on left: 93 94 95 96 97 98
        on right: 92
    logic_operator <rec> (102)
        on left: 99 100 101
        on right: 87
    conditional <rec> (103)
        on left: 102 103
        on right: 74
    if_else <rec> (104)
        on left: 104
        on right: 102
    if <rec> (105)
        on left: 105
        on right: 104
    else_section <rec> (106)
        on left: 106 107 108
        on right: 104 107
    else_if <rec> (107)
        on left: 109
        on right: 107
    else <rec> (108)
        on left: 110
        on right: 108
    switch_case <rec> (109)
        on left: 111
        on right: 103
    switch <rec> (110)
        on left: 112
        on right: 111
    case_section <rec> (111)
        on left: 113 114
        on right: 111 114
    case <rec> (112)
        on left: 115
        on right: 113 114
    default_section <rec> (113)
        on left: 116 117
        on right: 111
    default <rec> (114)
        on left: 118
        on right: 117
    loop <rec> (115)
        on left: 119 120
        on right: 75
    while <rec> (116)
        on left: 121
        on right: 119
    for <rec> (117)
        on left: 122
        on right: 120
    for_structure <rec> (118)
        on left: 123
        on right: 122
    for_expression <rec> (119)
        on left: 124
        on right: 123
    for_assignment <rec> (120)
        on left: 125 126
        on right: 124
    return <rec> (121)
        on left: 127
        on right: 76


State 0

    0 $accept: • program $end

    TYPE      shift, and go to state 1
    CONSTANT  shift, and go to state 2

    $default  reduce using rule 2 (declarations_section)

    program               go to state 3
    declarations_section  go to state 4
    declarations_list     go to state 5
    declaration           go to state 6


State 1

    6 declaration: TYPE • id_list

    ID  shift, and go to state 7

    id_list         go to state 8
    id_declaration  go to state 9
    id              go to state 10


State 2

    7 declaration: CONSTANT • TYPE id_list

    TYPE  shift, and go to state 11


State 3

    0 $accept: program • $end

    $end  shift, and go to state 12


State 4

    1 program: declarations_section • subprograms_section

    FUNCTION  shift, and go to state 13

    subprograms_section  go to state 14
    subprogram           go to state 15
    header               go to state 16


State 5

    3 declarations_section: declarations_list •

    $default  reduce using rule 3 (declarations_section)


State 6

    4 declarations_list: declaration • ';'
    5                  | declaration • ';' declarations_list

    ';'  shift, and go to state 17


State 7

   12 id: ID • dimensions

    '['  shift, and go to state 18

    $default  reduce using rule 13 (dimensions)

    dimensions          go to state 19
    dimensions_novalue  go to state 20
    dimensions_value    go to state 21


State 8

    6 declaration: TYPE id_list •

    $default  reduce using rule 6 (declaration)


State 9

    8 id_list: id_declaration •
    9        | id_declaration • ',' id_list

    ','  shift, and go to state 22

    $default  reduce using rule 8 (id_list)


State 10

   10 id_declaration: id •
   11               | id • '=' expression

    '='  shift, and go to state 23

    $default  reduce using rule 10 (id_declaration)


State 11

    7 declaration: CONSTANT TYPE • id_list

    ID  shift, and go to state 7

    id_list         go to state 24
    id_declaration  go to state 9
    id              go to state 10


State 12

    0 $accept: program $end •

    $default  accept


State 13

   55 header: FUNCTION • signature

    VOID  shift, and go to state 25
    TYPE  shift, and go to state 26

    signature        go to state 27
    subprogram_type  go to state 28


State 14

    1 program: declarations_section subprograms_section •

    $default  reduce using rule 1 (program)


State 15

   52 subprograms_section: subprogram •
   53                    | subprogram • subprograms_section

    FUNCTION  shift, and go to state 13

    $default  reduce using rule 52 (subprograms_section)

    subprograms_section  go to state 29
    subprogram           go to state 15
    header               go to state 16


State 16

   54 subprogram: header • block

    '{'  shift, and go to state 30

    block  go to state 31


State 17

    4 declarations_list: declaration ';' •
    5                  | declaration ';' • declarations_list

    TYPE      shift, and go to state 1
    CONSTANT  shift, and go to state 2

    $default  reduce using rule 4 (declarations_list)

    declarations_list  go to state 32
    declaration        go to state 6


State 18

   16 dimensions_novalue: '[' • ']'
   17                   | '[' • ']' dimensions_novalue
   18 dimensions_value: '[' • INT ']'
   19                 | '[' • INT ']' dimensions_value

    INT  shift, and go to state 33
    ']'  shift, and go to state 34


State 19

   12 id: ID dimensions •

    $default  reduce using rule 12 (id)


State 20

   14 dimensions: dimensions_novalue •

    $default  reduce using rule 14 (dimensions)


State 21

   15 dimensions: dimensions_value •

    $default  reduce using rule 15 (dimensions)


State 22

    9 id_list: id_declaration ',' • id_list

    ID  shift, and go to state 7

    id_list         go to state 35
    id_declaration  go to state 9
    id              go to state 10


State 23

   11 id_declaration: id '=' • expression

    ID       shift, and go to state 36
    INT      shift, and go to state 37
    REAL     shift, and go to state 38
    BOOLEAN  shift, and go to state 39
    CHAR     shift, and go to state 40
    STRING   shift, and go to state 41
    '('      shift, and go to state 42

    id             go to state 43
    expression     go to state 44
    term           go to state 45
    factor         go to state 46
    base           go to state 47
    literal        go to state 48
    id_value       go to state 49
    function_call  go to state 50


State 24

    7 declaration: CONSTANT TYPE id_list •

    $default  reduce using rule 7 (declaration)


State 25

   58 subprogram_type: VOID •

    $default  reduce using rule 58 (subprogram_type)


State 26

   57 subprogram_type: TYPE •

    $default  reduce using rule 57 (subprogram_type)


State 27

   55 header: FUNCTION signature •

    $default  reduce using rule 55 (header)


State 28

   56 signature: subprogram_type • subprogram_id '(' parameters ')'

    ID    shift, and go to state 51
    MAIN  shift, and go to state 52

    subprogram_id  go to state 53


State 29

   53 subprograms_section: subprogram subprograms_section •

    $default  reduce using rule 53 (subprograms_section)


State 30

   66 block: '{' • body '}'

    ID        shift, and go to state 7
    TYPE      shift, and go to state 1
    CONSTANT  shift, and go to state 2
    FOR       shift, and go to state 54
    WHILE     shift, and go to state 55
    IF        shift, and go to state 56
    SWITCH    shift, and go to state 57
    BREAK     shift, and go to state 58
    RETURN    shift, and go to state 59

    $default  reduce using rule 67 (body)

    declarations_list  go to state 60
    declaration        go to state 6
    id                 go to state 61
    body               go to state 62
    statement_list     go to state 63
    statement          go to state 64
    assignment         go to state 65
    conditional        go to state 66
    if_else            go to state 67
    if                 go to state 68
    switch_case        go to state 69
    switch             go to state 70
    loop               go to state 71
    while              go to state 72
    for                go to state 73
    return             go to state 74


State 31

   54 subprogram: header block •

    $default  reduce using rule 54 (subprogram)


State 32

    5 declarations_list: declaration ';' declarations_list •

    $default  reduce using rule 5 (declarations_list)


State 33

   18 dimensions_value: '[' INT • ']'
   19                 | '[' INT • ']' dimensions_value

    ']'  shift, and go to state 75


State 34

   16 dimensions_novalue: '[' ']' •
   17                   | '[' ']' • dimensions_novalue

    '['  shift, and go to state 76

    $default  reduce using rule 16 (dimensions_novalue)

    dimensions_novalue  go to state 77


State 35

    9 id_list: id_declaration ',' id_list •

    $default  reduce using rule 9 (id_list)


State 36

   12 id: ID • dimensions
   42 function_call: ID • '(' arguments ')'

    '['  shift, and go to state 18
    '('  shift, and go to state 78

    $default  reduce using rule 13 (dimensions)

    dimensions          go to state 19
    dimensions_novalue  go to state 20
    dimensions_value    go to state 21


State 37

   35 literal: INT •

    $default  reduce using rule 35 (literal)


State 38

   36 literal: REAL •

    $default  reduce using rule 36 (literal)


State 39

   37 literal: BOOLEAN •

    $default  reduce using rule 37 (literal)


State 40

   38 literal: CHAR •

    $default  reduce using rule 38 (literal)


State 41

   39 literal: STRING •

    $default  reduce using rule 39 (literal)


State 42

   31 base: '(' • expression ')'

    ID       shift, and go to state 36
    INT      shift, and go to state 37
    REAL     shift, and go to state 38
    BOOLEAN  shift, and go to state 39
    CHAR     shift, and go to state 40
    STRING   shift, and go to state 41
    '('      shift, and go to state 42

    id             go to state 43
    expression     go to state 79
    term           go to state 45
    factor         go to state 46
    base           go to state 47
    literal        go to state 48
    id_value       go to state 49
    function_call  go to state 50


State 43

   40 id_value: id •

    $default  reduce using rule 40 (id_value)


State 44

   11 id_declaration: id '=' expression •
   20 expression: expression • expression_operator term

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81

    $default  reduce using rule 11 (id_declaration)

    expression_operator  go to state 82


State 45

   21 expression: term •
   24 term: term • term_operator factor

    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 21 (expression)

    term_operator  go to state 86


State 46

   25 term: factor •

    $default  reduce using rule 25 (term)


State 47

   29 factor: base • POWER factor
   30       | base •

    POWER  shift, and go to state 87

    $default  reduce using rule 30 (factor)


State 48

   32 base: literal •

    $default  reduce using rule 32 (base)


State 49

   33 base: id_value •
   34     | id_value • double_sign

    DOUBLE_PLUS   shift, and go to state 88
    DOUBLE_MINUS  shift, and go to state 89

    $default  reduce using rule 33 (base)

    double_sign  go to state 90


State 50

   41 id_value: function_call •

    $default  reduce using rule 41 (id_value)


State 51

   59 subprogram_id: ID •

    $default  reduce using rule 59 (subprogram_id)


State 52

   60 subprogram_id: MAIN •

    $default  reduce using rule 60 (subprogram_id)


State 53

   56 signature: subprogram_type subprogram_id • '(' parameters ')'

    '('  shift, and go to state 91


State 54

  122 for: FOR • for_structure block

    '('  shift, and go to state 92

    for_structure  go to state 93


State 55

  121 while: WHILE • evaluation block

    ID   shift, and go to state 7
    '('  shift, and go to state 94
    '!'  shift, and go to state 95

    id           go to state 96
    evaluation   go to state 97
    comparation  go to state 98
    comparison   go to state 99
    compare      go to state 100


State 56

  105 if: IF • '(' evaluation ')' block

    '('  shift, and go to state 101


State 57

  112 switch: SWITCH • '(' id_value ')'

    '('  shift, and go to state 102


State 58

   77 statement: BREAK •

    $default  reduce using rule 77 (statement)


State 59

  127 return: RETURN • expression

    ID       shift, and go to state 36
    INT      shift, and go to state 37
    REAL     shift, and go to state 38
    BOOLEAN  shift, and go to state 39
    CHAR     shift, and go to state 40
    STRING   shift, and go to state 41
    '('      shift, and go to state 42

    id             go to state 43
    expression     go to state 103
    term           go to state 45
    factor         go to state 46
    base           go to state 47
    literal        go to state 48
    id_value       go to state 49
    function_call  go to state 50


State 60

   68 body: declarations_list •
   69     | declarations_list • statement_list

    ID      shift, and go to state 7
    FOR     shift, and go to state 54
    WHILE   shift, and go to state 55
    IF      shift, and go to state 56
    SWITCH  shift, and go to state 57
    BREAK   shift, and go to state 58
    RETURN  shift, and go to state 59

    $default  reduce using rule 68 (body)

    id              go to state 61
    statement_list  go to state 104
    statement       go to state 64
    assignment      go to state 65
    conditional     go to state 66
    if_else         go to state 67
    if              go to state 68
    switch_case     go to state 69
    switch          go to state 70
    loop            go to state 71
    while           go to state 72
    for             go to state 73
    return          go to state 74


State 61

   78 assignment: id • assignment_operation

    PLUS_ASSIGN   shift, and go to state 105
    MINUS_ASSIGN  shift, and go to state 106
    DIV_ASSIGN    shift, and go to state 107
    TIMES_ASSIGN  shift, and go to state 108
    DOUBLE_PLUS   shift, and go to state 88
    DOUBLE_MINUS  shift, and go to state 89
    '='           shift, and go to state 109

    double_sign           go to state 110
    assignment_operation  go to state 111
    assignment_sign       go to state 112


State 62

   66 block: '{' body • '}'

    '}'  shift, and go to state 113


State 63

   70 body: statement_list •

    $default  reduce using rule 70 (body)


State 64

   71 statement_list: statement • ';'
   72               | statement • ';' statement_list

    ';'  shift, and go to state 114


State 65

   73 statement: assignment •

    $default  reduce using rule 73 (statement)


State 66

   74 statement: conditional •

    $default  reduce using rule 74 (statement)


State 67

  102 conditional: if_else •

    $default  reduce using rule 102 (conditional)


State 68

  104 if_else: if • else_section

    ELSE_IF  shift, and go to state 115
    ELSE     shift, and go to state 116

    $default  reduce using rule 106 (else_section)

    else_section  go to state 117
    else_if       go to state 118
    else          go to state 119


State 69

  103 conditional: switch_case •

    $default  reduce using rule 103 (conditional)


State 70

  111 switch_case: switch • '{' case_section default_section '}'

    '{'  shift, and go to state 120


State 71

   75 statement: loop •

    $default  reduce using rule 75 (statement)


State 72

  119 loop: while •

    $default  reduce using rule 119 (loop)


State 73

  120 loop: for •

    $default  reduce using rule 120 (loop)


State 74

   76 statement: return •

    $default  reduce using rule 76 (statement)


State 75

   18 dimensions_value: '[' INT ']' •
   19                 | '[' INT ']' • dimensions_value

    '['  shift, and go to state 121

    $default  reduce using rule 18 (dimensions_value)

    dimensions_value  go to state 122


State 76

   16 dimensions_novalue: '[' • ']'
   17                   | '[' • ']' dimensions_novalue

    ']'  shift, and go to state 34


State 77

   17 dimensions_novalue: '[' ']' dimensions_novalue •

    $default  reduce using rule 17 (dimensions_novalue)


State 78

   42 function_call: ID '(' • arguments ')'

    ID       shift, and go to state 36
    INT      shift, and go to state 37
    REAL     shift, and go to state 38
    BOOLEAN  shift, and go to state 39
    CHAR     shift, and go to state 40
    STRING   shift, and go to state 41

    $default  reduce using rule 43 (arguments)

    id_declaration  go to state 123
    id              go to state 10
    literal         go to state 124
    function_call   go to state 125
    arguments       go to state 126
    arguments_list  go to state 127
    argument        go to state 128


State 79

   20 expression: expression • expression_operator term
   31 base: '(' expression • ')'

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    ')'  shift, and go to state 129

    expression_operator  go to state 82


State 80

   22 expression_operator: '+' •

    $default  reduce using rule 22 (expression_operator)


State 81

   23 expression_operator: '-' •

    $default  reduce using rule 23 (expression_operator)


State 82

   20 expression: expression expression_operator • term

    ID       shift, and go to state 36
    INT      shift, and go to state 37
    REAL     shift, and go to state 38
    BOOLEAN  shift, and go to state 39
    CHAR     shift, and go to state 40
    STRING   shift, and go to state 41
    '('      shift, and go to state 42

    id             go to state 43
    term           go to state 130
    factor         go to state 46
    base           go to state 47
    literal        go to state 48
    id_value       go to state 49
    function_call  go to state 50


State 83

   26 term_operator: '*' •

    $default  reduce using rule 26 (term_operator)


State 84

   27 term_operator: '/' •

    $default  reduce using rule 27 (term_operator)


State 85

   28 term_operator: '%' •

    $default  reduce using rule 28 (term_operator)


State 86

   24 term: term term_operator • factor

    ID       shift, and go to state 36
    INT      shift, and go to state 37
    REAL     shift, and go to state 38
    BOOLEAN  shift, and go to state 39
    CHAR     shift, and go to state 40
    STRING   shift, and go to state 41
    '('      shift, and go to state 42

    id             go to state 43
    factor         go to state 131
    base           go to state 47
    literal        go to state 48
    id_value       go to state 49
    function_call  go to state 50


State 87

   29 factor: base POWER • factor

    ID       shift, and go to state 36
    INT      shift, and go to state 37
    REAL     shift, and go to state 38
    BOOLEAN  shift, and go to state 39
    CHAR     shift, and go to state 40
    STRING   shift, and go to state 41
    '('      shift, and go to state 42

    id             go to state 43
    factor         go to state 132
    base           go to state 47
    literal        go to state 48
    id_value       go to state 49
    function_call  go to state 50


State 88

   50 double_sign: DOUBLE_PLUS •

    $default  reduce using rule 50 (double_sign)


State 89

   51 double_sign: DOUBLE_MINUS •

    $default  reduce using rule 51 (double_sign)


State 90

   34 base: id_value double_sign •

    $default  reduce using rule 34 (base)


State 91

   56 signature: subprogram_type subprogram_id '(' • parameters ')'

    TYPE  shift, and go to state 133

    $default  reduce using rule 61 (parameters)

    parameters      go to state 134
    parameter_list  go to state 135
    parameter       go to state 136


State 92

  123 for_structure: '(' • for_expression ')'

    ID    shift, and go to state 7
    TYPE  shift, and go to state 137

    id              go to state 138
    for_expression  go to state 139
    for_assignment  go to state 140


State 93

  122 for: FOR for_structure • block

    '{'  shift, and go to state 30

    block  go to state 141


State 94

   90 comparison: '(' • compare ')'

    ID  shift, and go to state 7

    id       go to state 96
    compare  go to state 142


State 95

   89 comparation: '!' • comparison

    ID   shift, and go to state 7
    '('  shift, and go to state 94

    id          go to state 96
    comparison  go to state 143
    compare     go to state 100


State 96

   92 compare: id • evaluation_operator expression

    EQUAL       shift, and go to state 144
    NOT_EQUAL   shift, and go to state 145
    EQ_GREATER  shift, and go to state 146
    EQ_SMALLER  shift, and go to state 147
    '>'         shift, and go to state 148
    '<'         shift, and go to state 149

    evaluation_operator  go to state 150


State 97

  121 while: WHILE evaluation • block

    '{'  shift, and go to state 30

    block  go to state 151


State 98

   86 evaluation: comparation •
   87           | comparation • logic_operator evaluation

    AND  shift, and go to state 152
    OR   shift, and go to state 153
    EOR  shift, and go to state 154

    $default  reduce using rule 86 (evaluation)

    logic_operator  go to state 155


State 99

   88 comparation: comparison •

    $default  reduce using rule 88 (comparation)


State 100

   91 comparison: compare •

    $default  reduce using rule 91 (comparison)


State 101

  105 if: IF '(' • evaluation ')' block

    ID   shift, and go to state 7
    '('  shift, and go to state 94
    '!'  shift, and go to state 95

    id           go to state 96
    evaluation   go to state 156
    comparation  go to state 98
    comparison   go to state 99
    compare      go to state 100


State 102

  112 switch: SWITCH '(' • id_value ')'

    ID  shift, and go to state 36

    id             go to state 43
    id_value       go to state 157
    function_call  go to state 50


State 103

   20 expression: expression • expression_operator term
  127 return: RETURN expression •

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81

    $default  reduce using rule 127 (return)

    expression_operator  go to state 82


State 104

   69 body: declarations_list statement_list •

    $default  reduce using rule 69 (body)


State 105

   82 assignment_sign: PLUS_ASSIGN •

    $default  reduce using rule 82 (assignment_sign)


State 106

   83 assignment_sign: MINUS_ASSIGN •

    $default  reduce using rule 83 (assignment_sign)


State 107

   84 assignment_sign: DIV_ASSIGN •

    $default  reduce using rule 84 (assignment_sign)


State 108

   85 assignment_sign: TIMES_ASSIGN •

    $default  reduce using rule 85 (assignment_sign)


State 109

   81 assignment_sign: '=' •

    $default  reduce using rule 81 (assignment_sign)


State 110

   80 assignment_operation: double_sign •

    $default  reduce using rule 80 (assignment_operation)


State 111

   78 assignment: id assignment_operation •

    $default  reduce using rule 78 (assignment)


State 112

   79 assignment_operation: assignment_sign • expression

    ID       shift, and go to state 36
    INT      shift, and go to state 37
    REAL     shift, and go to state 38
    BOOLEAN  shift, and go to state 39
    CHAR     shift, and go to state 40
    STRING   shift, and go to state 41
    '('      shift, and go to state 42

    id             go to state 43
    expression     go to state 158
    term           go to state 45
    factor         go to state 46
    base           go to state 47
    literal        go to state 48
    id_value       go to state 49
    function_call  go to state 50


State 113

   66 block: '{' body '}' •

    $default  reduce using rule 66 (block)


State 114

   71 statement_list: statement ';' •
   72               | statement ';' • statement_list

    ID      shift, and go to state 7
    FOR     shift, and go to state 54
    WHILE   shift, and go to state 55
    IF      shift, and go to state 56
    SWITCH  shift, and go to state 57
    BREAK   shift, and go to state 58
    RETURN  shift, and go to state 59

    $default  reduce using rule 71 (statement_list)

    id              go to state 61
    statement_list  go to state 159
    statement       go to state 64
    assignment      go to state 65
    conditional     go to state 66
    if_else         go to state 67
    if              go to state 68
    switch_case     go to state 69
    switch          go to state 70
    loop            go to state 71
    while           go to state 72
    for             go to state 73
    return          go to state 74


State 115

  109 else_if: ELSE_IF • '(' evaluation ')' block

    '('  shift, and go to state 160


State 116

  110 else: ELSE • block

    '{'  shift, and go to state 30

    block  go to state 161


State 117

  104 if_else: if else_section •

    $default  reduce using rule 104 (if_else)


State 118

  107 else_section: else_if • else_section

    ELSE_IF  shift, and go to state 115
    ELSE     shift, and go to state 116

    $default  reduce using rule 106 (else_section)

    else_section  go to state 162
    else_if       go to state 118
    else          go to state 119


State 119

  108 else_section: else •

    $default  reduce using rule 108 (else_section)


State 120

  111 switch_case: switch '{' • case_section default_section '}'

    CASE  shift, and go to state 163

    case_section  go to state 164
    case          go to state 165


State 121

   18 dimensions_value: '[' • INT ']'
   19                 | '[' • INT ']' dimensions_value

    INT  shift, and go to state 33


State 122

   19 dimensions_value: '[' INT ']' dimensions_value •

    $default  reduce using rule 19 (dimensions_value)


State 123

   47 argument: id_declaration •

    $default  reduce using rule 47 (argument)


State 124

   48 argument: literal •

    $default  reduce using rule 48 (argument)


State 125

   49 argument: function_call •

    $default  reduce using rule 49 (argument)


State 126

   42 function_call: ID '(' arguments • ')'

    ')'  shift, and go to state 166


State 127

   44 arguments: arguments_list •

    $default  reduce using rule 44 (arguments)


State 128

   45 arguments_list: argument •
   46               | argument • ',' arguments_list

    ','  shift, and go to state 167

    $default  reduce using rule 45 (arguments_list)


State 129

   31 base: '(' expression ')' •

    $default  reduce using rule 31 (base)


State 130

   20 expression: expression expression_operator term •
   24 term: term • term_operator factor

    '*'  shift, and go to state 83
    '/'  shift, and go to state 84
    '%'  shift, and go to state 85

    $default  reduce using rule 20 (expression)

    term_operator  go to state 86


State 131

   24 term: term term_operator factor •

    $default  reduce using rule 24 (term)


State 132

   29 factor: base POWER factor •

    $default  reduce using rule 29 (factor)


State 133

   65 parameter: TYPE • id

    ID  shift, and go to state 7

    id  go to state 168


State 134

   56 signature: subprogram_type subprogram_id '(' parameters • ')'

    ')'  shift, and go to state 169


State 135

   62 parameters: parameter_list •

    $default  reduce using rule 62 (parameters)


State 136

   63 parameter_list: parameter •
   64               | parameter • ',' parameter_list

    ','  shift, and go to state 170

    $default  reduce using rule 63 (parameter_list)


State 137

  126 for_assignment: TYPE • id '=' expression

    ID  shift, and go to state 7

    id  go to state 171


State 138

  125 for_assignment: id • '=' expression

    '='  shift, and go to state 172


State 139

  123 for_structure: '(' for_expression • ')'

    ')'  shift, and go to state 173


State 140

  124 for_expression: for_assignment • ';' evaluation ';' assignment

    ';'  shift, and go to state 174


State 141

  122 for: FOR for_structure block •

    $default  reduce using rule 122 (for)


State 142

   90 comparison: '(' compare • ')'

    ')'  shift, and go to state 175


State 143

   89 comparation: '!' comparison •

    $default  reduce using rule 89 (comparation)


State 144

   93 evaluation_operator: EQUAL •

    $default  reduce using rule 93 (evaluation_operator)


State 145

   94 evaluation_operator: NOT_EQUAL •

    $default  reduce using rule 94 (evaluation_operator)


State 146

   97 evaluation_operator: EQ_GREATER •

    $default  reduce using rule 97 (evaluation_operator)


State 147

   98 evaluation_operator: EQ_SMALLER •

    $default  reduce using rule 98 (evaluation_operator)


State 148

   95 evaluation_operator: '>' •

    $default  reduce using rule 95 (evaluation_operator)


State 149

   96 evaluation_operator: '<' •

    $default  reduce using rule 96 (evaluation_operator)


State 150

   92 compare: id evaluation_operator • expression

    ID       shift, and go to state 36
    INT      shift, and go to state 37
    REAL     shift, and go to state 38
    BOOLEAN  shift, and go to state 39
    CHAR     shift, and go to state 40
    STRING   shift, and go to state 41
    '('      shift, and go to state 42

    id             go to state 43
    expression     go to state 176
    term           go to state 45
    factor         go to state 46
    base           go to state 47
    literal        go to state 48
    id_value       go to state 49
    function_call  go to state 50


State 151

  121 while: WHILE evaluation block •

    $default  reduce using rule 121 (while)


State 152

   99 logic_operator: AND •

    $default  reduce using rule 99 (logic_operator)


State 153

  100 logic_operator: OR •

    $default  reduce using rule 100 (logic_operator)


State 154

  101 logic_operator: EOR •

    $default  reduce using rule 101 (logic_operator)


State 155

   87 evaluation: comparation logic_operator • evaluation

    ID   shift, and go to state 7
    '('  shift, and go to state 94
    '!'  shift, and go to state 95

    id           go to state 96
    evaluation   go to state 177
    comparation  go to state 98
    comparison   go to state 99
    compare      go to state 100


State 156

  105 if: IF '(' evaluation • ')' block

    ')'  shift, and go to state 178


State 157

  112 switch: SWITCH '(' id_value • ')'

    ')'  shift, and go to state 179


State 158

   20 expression: expression • expression_operator term
   79 assignment_operation: assignment_sign expression •

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81

    $default  reduce using rule 79 (assignment_operation)

    expression_operator  go to state 82


State 159

   72 statement_list: statement ';' statement_list •

    $default  reduce using rule 72 (statement_list)


State 160

  109 else_if: ELSE_IF '(' • evaluation ')' block

    ID   shift, and go to state 7
    '('  shift, and go to state 94
    '!'  shift, and go to state 95

    id           go to state 96
    evaluation   go to state 180
    comparation  go to state 98
    comparison   go to state 99
    compare      go to state 100


State 161

  110 else: ELSE block •

    $default  reduce using rule 110 (else)


State 162

  107 else_section: else_if else_section •

    $default  reduce using rule 107 (else_section)


State 163

  115 case: CASE • literal ':' body

    INT      shift, and go to state 37
    REAL     shift, and go to state 38
    BOOLEAN  shift, and go to state 39
    CHAR     shift, and go to state 40
    STRING   shift, and go to state 41

    literal  go to state 181


State 164

  111 switch_case: switch '{' case_section • default_section '}'

    DEFAULT  shift, and go to state 182

    $default  reduce using rule 116 (default_section)

    default_section  go to state 183
    default          go to state 184


State 165

  113 case_section: case •
  114             | case • case_section

    CASE  shift, and go to state 163

    $default  reduce using rule 113 (case_section)

    case_section  go to state 185
    case          go to state 165


State 166

   42 function_call: ID '(' arguments ')' •

    $default  reduce using rule 42 (function_call)


State 167

   46 arguments_list: argument ',' • arguments_list

    ID       shift, and go to state 36
    INT      shift, and go to state 37
    REAL     shift, and go to state 38
    BOOLEAN  shift, and go to state 39
    CHAR     shift, and go to state 40
    STRING   shift, and go to state 41

    id_declaration  go to state 123
    id              go to state 10
    literal         go to state 124
    function_call   go to state 125
    arguments_list  go to state 186
    argument        go to state 128


State 168

   65 parameter: TYPE id •

    $default  reduce using rule 65 (parameter)


State 169

   56 signature: subprogram_type subprogram_id '(' parameters ')' •

    $default  reduce using rule 56 (signature)


State 170

   64 parameter_list: parameter ',' • parameter_list

    TYPE  shift, and go to state 133

    parameter_list  go to state 187
    parameter       go to state 136


State 171

  126 for_assignment: TYPE id • '=' expression

    '='  shift, and go to state 188


State 172

  125 for_assignment: id '=' • expression

    ID       shift, and go to state 36
    INT      shift, and go to state 37
    REAL     shift, and go to state 38
    BOOLEAN  shift, and go to state 39
    CHAR     shift, and go to state 40
    STRING   shift, and go to state 41
    '('      shift, and go to state 42

    id             go to state 43
    expression     go to state 189
    term           go to state 45
    factor         go to state 46
    base           go to state 47
    literal        go to state 48
    id_value       go to state 49
    function_call  go to state 50


State 173

  123 for_structure: '(' for_expression ')' •

    $default  reduce using rule 123 (for_structure)


State 174

  124 for_expression: for_assignment ';' • evaluation ';' assignment

    ID   shift, and go to state 7
    '('  shift, and go to state 94
    '!'  shift, and go to state 95

    id           go to state 96
    evaluation   go to state 190
    comparation  go to state 98
    comparison   go to state 99
    compare      go to state 100


State 175

   90 comparison: '(' compare ')' •

    $default  reduce using rule 90 (comparison)


State 176

   20 expression: expression • expression_operator term
   92 compare: id evaluation_operator expression •

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81

    $default  reduce using rule 92 (compare)

    expression_operator  go to state 82


State 177

   87 evaluation: comparation logic_operator evaluation •

    $default  reduce using rule 87 (evaluation)


State 178

  105 if: IF '(' evaluation ')' • block

    '{'  shift, and go to state 30

    block  go to state 191


State 179

  112 switch: SWITCH '(' id_value ')' •

    $default  reduce using rule 112 (switch)


State 180

  109 else_if: ELSE_IF '(' evaluation • ')' block

    ')'  shift, and go to state 192


State 181

  115 case: CASE literal • ':' body

    ':'  shift, and go to state 193


State 182

  118 default: DEFAULT • ':' body

    ':'  shift, and go to state 194


State 183

  111 switch_case: switch '{' case_section default_section • '}'

    '}'  shift, and go to state 195


State 184

  117 default_section: default •

    $default  reduce using rule 117 (default_section)


State 185

  114 case_section: case case_section •

    $default  reduce using rule 114 (case_section)


State 186

   46 arguments_list: argument ',' arguments_list •

    $default  reduce using rule 46 (arguments_list)


State 187

   64 parameter_list: parameter ',' parameter_list •

    $default  reduce using rule 64 (parameter_list)


State 188

  126 for_assignment: TYPE id '=' • expression

    ID       shift, and go to state 36
    INT      shift, and go to state 37
    REAL     shift, and go to state 38
    BOOLEAN  shift, and go to state 39
    CHAR     shift, and go to state 40
    STRING   shift, and go to state 41
    '('      shift, and go to state 42

    id             go to state 43
    expression     go to state 196
    term           go to state 45
    factor         go to state 46
    base           go to state 47
    literal        go to state 48
    id_value       go to state 49
    function_call  go to state 50


State 189

   20 expression: expression • expression_operator term
  125 for_assignment: id '=' expression •

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81

    $default  reduce using rule 125 (for_assignment)

    expression_operator  go to state 82


State 190

  124 for_expression: for_assignment ';' evaluation • ';' assignment

    ';'  shift, and go to state 197


State 191

  105 if: IF '(' evaluation ')' block •

    $default  reduce using rule 105 (if)


State 192

  109 else_if: ELSE_IF '(' evaluation ')' • block

    '{'  shift, and go to state 30

    block  go to state 198


State 193

  115 case: CASE literal ':' • body

    ID        shift, and go to state 7
    TYPE      shift, and go to state 1
    CONSTANT  shift, and go to state 2
    FOR       shift, and go to state 54
    WHILE     shift, and go to state 55
    IF        shift, and go to state 56
    SWITCH    shift, and go to state 57
    BREAK     shift, and go to state 58
    RETURN    shift, and go to state 59

    $default  reduce using rule 67 (body)

    declarations_list  go to state 60
    declaration        go to state 6
    id                 go to state 61
    body               go to state 199
    statement_list     go to state 63
    statement          go to state 64
    assignment         go to state 65
    conditional        go to state 66
    if_else            go to state 67
    if                 go to state 68
    switch_case        go to state 69
    switch             go to state 70
    loop               go to state 71
    while              go to state 72
    for                go to state 73
    return             go to state 74


State 194

  118 default: DEFAULT ':' • body

    ID        shift, and go to state 7
    TYPE      shift, and go to state 1
    CONSTANT  shift, and go to state 2
    FOR       shift, and go to state 54
    WHILE     shift, and go to state 55
    IF        shift, and go to state 56
    SWITCH    shift, and go to state 57
    BREAK     shift, and go to state 58
    RETURN    shift, and go to state 59

    $default  reduce using rule 67 (body)

    declarations_list  go to state 60
    declaration        go to state 6
    id                 go to state 61
    body               go to state 200
    statement_list     go to state 63
    statement          go to state 64
    assignment         go to state 65
    conditional        go to state 66
    if_else            go to state 67
    if                 go to state 68
    switch_case        go to state 69
    switch             go to state 70
    loop               go to state 71
    while              go to state 72
    for                go to state 73
    return             go to state 74


State 195

  111 switch_case: switch '{' case_section default_section '}' •

    $default  reduce using rule 111 (switch_case)


State 196

   20 expression: expression • expression_operator term
  126 for_assignment: TYPE id '=' expression •

    '+'  shift, and go to state 80
    '-'  shift, and go to state 81

    $default  reduce using rule 126 (for_assignment)

    expression_operator  go to state 82


State 197

  124 for_expression: for_assignment ';' evaluation ';' • assignment

    ID  shift, and go to state 7

    id          go to state 61
    assignment  go to state 201


State 198

  109 else_if: ELSE_IF '(' evaluation ')' block •

    $default  reduce using rule 109 (else_if)


State 199

  115 case: CASE literal ':' body •

    $default  reduce using rule 115 (case)


State 200

  118 default: DEFAULT ':' body •

    $default  reduce using rule 118 (default)


State 201

  124 for_expression: for_assignment ';' evaluation ';' assignment •

    $default  reduce using rule 124 (for_expression)
